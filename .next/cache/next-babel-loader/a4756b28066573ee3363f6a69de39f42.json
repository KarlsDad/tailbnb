{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/pages/host/setup.jsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useState } from 'react'; // Layout\n\nimport { HostHeader } from '../../components/layout/HostHeader'; // Modals\n\nimport { HostMenuModal } from '../../components/modals/HostMenuModal';\n\nconst setup = () => {\n  const {\n    0: menuModal,\n    1: setMenuModal\n  } = useState(false);\n\n  const changeMenuModal = () => {\n    setMenuModal(!menuModal);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(HostHeader, {\n    menu: \"setup\",\n    switchMenuModal: changeMenuModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), menuModal ? __jsx(HostMenuModal, {\n    switchMenuModal: changeMenuModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : null);\n};\n\nexport default setup;","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/pages/host/setup.jsx"],"names":["React","useState","HostHeader","HostMenuModal","setup","menuModal","setMenuModal","changeMenuModal"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,oCAA3B,C,CAEA;;AACA,SAASC,aAAT,QAA8B,uCAA9B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMM,eAAe,GAAG,MAAM;AAC5BD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,SACE,4BACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,eAAe,EAAEE,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,SAAS,GAAG,MAAC,aAAD;AAAe,IAAA,eAAe,EAAEE,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyD,IAFrE,CADF;AAMD,CAbD;;AAeA,eAAeH,KAAf","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\n\n// Layout\nimport { HostHeader } from '../../components/layout/HostHeader';\n\n// Modals\nimport { HostMenuModal } from '../../components/modals/HostMenuModal';\n\nconst setup = () => {\n  const [menuModal, setMenuModal] = useState(false);\n\n  const changeMenuModal = () => {\n    setMenuModal(!menuModal);\n  };\n\n  return (\n    <>\n      <HostHeader menu='setup' switchMenuModal={changeMenuModal} />\n      {menuModal ? <HostMenuModal switchMenuModal={changeMenuModal} /> : null}\n    </>\n  );\n};\n\nexport default setup;\n"]},"metadata":{},"sourceType":"module"}