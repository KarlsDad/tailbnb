{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Tomorrow.jsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport withSizes from 'react-sizes'; // Components\n\nimport { LocationExperienceCard } from '../functions/LocationExperienceCard';\nimport { ShowAll } from '../ShowAll'; // Wrapper\n\nimport { Section } from '../wrapper/Section';\nconst GET_LOCATION_EXPERIENCES = gql`\n  query LocationExperiences($available: String, $location: String) {\n    experiences(\n      where: { available: $available, location: $location }\n      first: 6\n    ) {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n      available\n      category\n    }\n  }\n`;\n\nconst mapSizesToProps = ({\n  width\n}) => ({\n  isMobile: width < 767,\n  isTablet: width > 767 && width < 1023,\n  isLaptop: width > 1023 && width < 1279,\n  isDesktop: width > 1279 && width < 1529,\n  isLargeDesktop: width > 1529\n}); // interface Experience {\n//   id: string;\n//   title: string;\n//   cost: number;\n//   ratings: number;\n//   reviews: number;\n//   category: string;\n//   img: string;\n// }\n// interface ExperienceData {\n//   experiences: Experience[];\n// }\n\n\nexport const Tomorrow = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_LOCATION_EXPERIENCES, {\n    variables: {\n      available: 'Tomorrow',\n      location: 'Vancouver'\n    }\n  });\n  const {\n    0: card,\n    1: setCard\n  } = useState(0);\n\n  const renderContent = (data, number) => {\n    var content = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(__jsx(\"div\", {\n        className: \"w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(LocationExperienceCard, {\n        key: i,\n        id: data === null || data === void 0 ? void 0 : data.experiences[i].id,\n        img: data === null || data === void 0 ? void 0 : data.experiences[i].img,\n        title: data === null || data === void 0 ? void 0 : data.experiences[i].title,\n        cost: data === null || data === void 0 ? void 0 : data.experiences[i].cost,\n        ratings: data === null || data === void 0 ? void 0 : data.experiences[i].ratings,\n        reviews: data === null || data === void 0 ? void 0 : data.experiences[i].reviews,\n        category: data === null || data === void 0 ? void 0 : data.experiences[i].category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n  return __jsx(React.Fragment, null, __jsx(Section, {\n    title: \"Tomorrow in Vancouver\",\n    phrase: \"Book activities led by local hosts on your next trip.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })) : data && __jsx(React.Fragment, null, isMobile ? renderContent(data, 4) : null, isTablet ? renderContent(data, 3) : null, isLaptop ? renderContent(data, 4) : null, isDesktop ? renderContent(data, 5) : null, isLargeDesktop ? renderContent(data, 6) : null)), __jsx(ShowAll, {\n    title: \"Show all experiences\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Tomorrow.jsx"],"names":["React","useState","useQuery","gql","PulseLoader","withSizes","LocationExperienceCard","ShowAll","Section","GET_LOCATION_EXPERIENCES","mapSizesToProps","width","isMobile","isTablet","isLaptop","isDesktop","isLargeDesktop","Tomorrow","loading","error","data","variables","available","location","card","setCard","renderContent","number","content","i","push","experiences","id","img","title","cost","ratings","reviews","category","message"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport withSizes from 'react-sizes';\n\n// Components\nimport { LocationExperienceCard } from '../functions/LocationExperienceCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_LOCATION_EXPERIENCES = gql`\n  query LocationExperiences($available: String, $location: String) {\n    experiences(\n      where: { available: $available, location: $location }\n      first: 6\n    ) {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n      available\n      category\n    }\n  }\n`;\n\nconst mapSizesToProps = ({ width }) => ({\n  isMobile: width < 767,\n  isTablet: width > 767 && width < 1023,\n  isLaptop: width > 1023 && width < 1279,\n  isDesktop: width > 1279 && width < 1529,\n  isLargeDesktop: width > 1529\n});\n\n// interface Experience {\n//   id: string;\n//   title: string;\n//   cost: number;\n//   ratings: number;\n//   reviews: number;\n//   category: string;\n//   img: string;\n// }\n\n// interface ExperienceData {\n//   experiences: Experience[];\n// }\n\nexport const Tomorrow = () => {\n  const { loading, error, data } = useQuery(GET_LOCATION_EXPERIENCES, {\n    variables: {\n      available: 'Tomorrow',\n      location: 'Vancouver'\n    }\n  });\n  const [card, setCard] = useState(0);\n\n  const renderContent = (data, number) => {\n    var content = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5'>\n          <LocationExperienceCard\n            key={i}\n            id={data?.experiences[i].id}\n            img={data?.experiences[i].img}\n            title={data?.experiences[i].title}\n            cost={data?.experiences[i].cost}\n            ratings={data?.experiences[i].ratings}\n            reviews={data?.experiences[i].reviews}\n            category={data?.experiences[i].category}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section\n        title='Tomorrow in Vancouver'\n        phrase='Book activities led by local hosts on your next trip.'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                {isMobile ? renderContent(data, 4) : null}\n                {isTablet ? renderContent(data, 3) : null}\n                {isLaptop ? renderContent(data, 4) : null}\n                {isDesktop ? renderContent(data, 5) : null}\n                {isLargeDesktop ? renderContent(data, 6) : null}\n              </>\n            )\n          )}\n        </div>\n        <ShowAll title='Show all experiences' />\n      </Section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}