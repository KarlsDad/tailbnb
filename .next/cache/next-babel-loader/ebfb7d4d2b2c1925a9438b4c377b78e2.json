{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\nimport Media from 'react-media'; // Images\n\nimport staydetail1 from '../../../public/img/high/staydetail1.jpg';\nimport staydetail2 from '../../../public/img/high/staydetail2.jpg';\nimport staydetail3 from '../../../public/img/high/staydetail3.jpg';\nimport staydetail4 from '../../../public/img/high/staydetail4.jpg'; // Component\n\nimport AdventureCard from '../presentational/AdventureCard';\nimport ShowAll from '../ShowAll';\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n      imglow\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ADVENTURES);\n  const [isLoading, setIsLoading] = useState(true);\n  const [photos, setPhotos] = useState({});\n  const info = {\n    query: 'adventure',\n    count: 4,\n    orientation: 'portrait',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios.get(`https://api.unsplash.com/photos/random?h=140&query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`).then(data => {\n      setPhotos({\n        imgs: data.data\n      });\n    });\n    setIsLoading(false);\n  };\n\n  const renderContent = (data, number) => {\n    for (let i = 0; i < number; i++) {\n      return React.createElement(AdventureCard, {\n        key: data[i].id,\n        id: data[i].id,\n        img: `staydetail${i}`,\n        imglow: `staydetail${i}`,\n        country: data[i].country,\n        title: data[i].title,\n        cost: data[i].cost,\n        period: data[i].period\n      });\n    }\n  };\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"flex justify-center items-center w-full py-20\"\n    }, React.createElement(PulseLoader, {\n      size: 10,\n      color: '#008489'\n    }));\n  }\n\n  if (error) return `Error! ${error.message}`;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\"\n  }, photos && data ? React.createElement(Media, {\n    queries: {\n      small: '(max-width: 599px)'\n    }\n  }, matches => React.createElement(React.Fragment, null, matches.small && renderContent(data.adventures, 4))) : null), React.createElement(ShowAll, {\n    title: \"Show all adventures\"\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.js"],"names":["React","useState","useEffect","useQuery","gql","PulseLoader","axios","Media","staydetail1","staydetail2","staydetail3","staydetail4","AdventureCard","ShowAll","GET_ADVENTURES","loading","error","data","isLoading","setIsLoading","photos","setPhotos","info","query","count","orientation","client_id","loadData","get","then","imgs","renderContent","number","i","id","country","title","cost","period","message","small","matches","adventures"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,WAAP,MAAwB,0CAAxB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,MAAMC,cAAc,GAAGV,GAAI;;;;;;;;;;;;CAA3B;AAcA,gBAAe,MAAM;AACnB,QAAM;AAAEW,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bd,QAAQ,CAACW,cAAD,CAAzC;AAEA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMqB,IAAI,GAAG;AACXC,IAAAA,KAAK,EAAE,WADI;AAEXC,IAAAA,KAAK,EAAE,CAFI;AAGXC,IAAAA,WAAW,EAAE,UAHF;AAIXC,IAAAA,SAAS,EAAE;AAJA,GAAb;AAOAxB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,YAAY;AAC3BrB,IAAAA,KAAK,CACFsB,GADH,CAEK,sDAAqDN,IAAI,CAACC,KAAM,UAASD,IAAI,CAACE,KAAM,gBAAeF,IAAI,CAACG,WAAY,cAAaH,IAAI,CAACI,SAAU,EAFrJ,EAIGG,IAJH,CAISZ,IAAD,IAAU;AACdI,MAAAA,SAAS,CAAC;AAAES,QAAAA,IAAI,EAAEb,IAAI,CAACA;AAAb,OAAD,CAAT;AACD,KANH;AAOAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GATD;;AAWA,QAAMY,aAAa,GAAG,CAACd,IAAD,EAAOe,MAAP,KAAkB;AACtC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,EAA7B,EAAiC;AAC/B,aACE,oBAAC,aAAD;AACE,QAAA,GAAG,EAAEhB,IAAI,CAACgB,CAAD,CAAJ,CAAQC,EADf;AAEE,QAAA,EAAE,EAAEjB,IAAI,CAACgB,CAAD,CAAJ,CAAQC,EAFd;AAGE,QAAA,GAAG,EAAG,aAAYD,CAAE,EAHtB;AAIE,QAAA,MAAM,EAAG,aAAYA,CAAE,EAJzB;AAKE,QAAA,OAAO,EAAEhB,IAAI,CAACgB,CAAD,CAAJ,CAAQE,OALnB;AAME,QAAA,KAAK,EAAElB,IAAI,CAACgB,CAAD,CAAJ,CAAQG,KANjB;AAOE,QAAA,IAAI,EAAEnB,IAAI,CAACgB,CAAD,CAAJ,CAAQI,IAPhB;AAQE,QAAA,MAAM,EAAEpB,IAAI,CAACgB,CAAD,CAAJ,CAAQK;AARlB,QADF;AAYD;AACF,GAfD;;AAiBA,MAAIvB,OAAJ,EAAa;AACX,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAuB,MAAA,KAAK,EAAE;AAA9B,MADF,CADF;AAKD;;AAED,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACuB,OAAQ,EAA/B;AAEX,SACE,0CACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGnB,MAAM,IAAIH,IAAV,GACC,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPuB,MAAAA,KAAK,EAAE;AADA;AADX,KAIIC,OAAD,IACC,0CAAGA,OAAO,CAACD,KAAR,IAAiBT,aAAa,CAACd,IAAI,CAACyB,UAAN,EAAkB,CAAlB,CAAjC,CALJ,CADD,GASG,IAVN,CADF,EAiCE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC;AAAf,IAjCF,CADF;AAqCD,CA5FD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\nimport Media from 'react-media';\n\n// Images\nimport staydetail1 from '../../../public/img/high/staydetail1.jpg';\nimport staydetail2 from '../../../public/img/high/staydetail2.jpg';\nimport staydetail3 from '../../../public/img/high/staydetail3.jpg';\nimport staydetail4 from '../../../public/img/high/staydetail4.jpg';\n\n// Component\nimport AdventureCard from '../presentational/AdventureCard';\nimport ShowAll from '../ShowAll';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n      imglow\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_ADVENTURES);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [photos, setPhotos] = useState({});\n\n  const info = {\n    query: 'adventure',\n    count: 4,\n    orientation: 'portrait',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios\n      .get(\n        `https://api.unsplash.com/photos/random?h=140&query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`\n      )\n      .then((data) => {\n        setPhotos({ imgs: data.data });\n      });\n    setIsLoading(false);\n  };\n\n  const renderContent = (data, number) => {\n    for (let i = 0; i < number; i++) {\n      return (\n        <AdventureCard\n          key={data[i].id}\n          id={data[i].id}\n          img={`staydetail${i}`}\n          imglow={`staydetail${i}`}\n          country={data[i].country}\n          title={data[i].title}\n          cost={data[i].cost}\n          period={data[i].period}\n        />\n      );\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className='flex justify-center items-center w-full py-20'>\n        <PulseLoader size={10} color={'#008489'} />\n      </div>\n    );\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {photos && data ? (\n          <Media\n            queries={{\n              small: '(max-width: 599px)'\n            }}>\n            {(matches) => (\n              <>{matches.small && renderContent(data.adventures, 4)}</>\n            )}\n          </Media>\n        ) : null}\n\n        {/* {data.adventures.map(({ id, country, title, cost, period }, index) => {\n          return (\n            <div className='lg:w-1/4 md:w-1/3 w-1/2 pb-5'>\n              {photos.imgs ? (\n                <AdventureCard\n                  key={id}\n                  id={id}\n                  img={photos.imgs[index].urls.full}\n                  imglow={photos.imgs[index].urls.thumb}\n                  country={country}\n                  title={title}\n                  cost={cost}\n                  period={period}\n                />\n              ) : null}\n            </div>\n          );\n        })} */}\n      </div>\n\n      <ShowAll title='Show all adventures' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}