{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/THundredPlus.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    stays {\\n      id\\n      host_is_superhost\\n      size\\n      country\\n      name\\n      price\\n      reviews_per_month\\n      number_of_reviews\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios'; // Component\n\nimport { THundredPlusCard } from '../presentational/THundredPlusCard';\nimport ShowAll from '../ShowAll';\nvar staydata = gql(_templateObject());\nexport default (function () {\n  var _useQuery = useQuery(staydata),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState(true),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState({}),\n      photos = _useState2[0],\n      setPhotos = _useState2[1];\n\n  var info = {\n    query: 'house',\n    count: 4,\n    orientation: 'landscape',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n  useEffect(function () {\n    loadData();\n  }, []);\n\n  var loadData = function loadData() {\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            axios.get(\"https://api.unsplash.com/photos/random?query=\".concat(info.query, \"&count=\").concat(info.count, \"&orientation=\").concat(info.orientation, \"&client_id=\").concat(info.client_id)).then(function (data) {\n              setPhotos({\n                imgs: data.data\n              });\n            });\n            setIsLoading(false);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: \"flex justify-center items-center w-full py-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(PulseLoader, {\n      size: 10,\n      color: '#008489',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n  if (error) return \"Error! \".concat(error.message);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex flex-wrap items-start justify-start w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, data.stays.map(function (_ref, index) {\n    var id = _ref.id,\n        host_is_superhost = _ref.host_is_superhost,\n        img = _ref.img,\n        imglow = _ref.imglow,\n        size = _ref.size,\n        country = _ref.country,\n        name = _ref.name,\n        price = _ref.price,\n        reviews_per_month = _ref.reviews_per_month,\n        number_of_reviews = _ref.number_of_reviews;\n    return __jsx(\"div\", {\n      className: \"lg:w-1/3 xl:w-1/4 pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, photos.imgs ? __jsx(THundredPlusCard, {\n      key: id,\n      host_is_superhost: host_is_superhost,\n      img: photos.imgs[index].urls.raw,\n      imglow: photos.imgs[index].urls.thumb,\n      size: size,\n      country: country,\n      name: name,\n      price: price,\n      reviews_per_month: reviews_per_month,\n      number_of_reviews: number_of_reviews,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : null);\n  })), __jsx(ShowAll, {\n    title: \"Show(2000+)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/THundredPlus.js"],"names":["React","useState","useEffect","useQuery","gql","PulseLoader","axios","THundredPlusCard","ShowAll","staydata","loading","error","data","isLoading","setIsLoading","photos","setPhotos","info","query","count","orientation","client_id","loadData","get","then","imgs","message","stays","map","index","id","host_is_superhost","img","imglow","size","country","name","price","reviews_per_month","number_of_reviews","urls","raw","thumb"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\n\n// Component\nimport { THundredPlusCard } from '../presentational/THundredPlusCard';\nimport ShowAll from '../ShowAll';\n\nconst staydata = gql`\n  query {\n    stays {\n      id\n      host_is_superhost\n      size\n      country\n      name\n      price\n      reviews_per_month\n      number_of_reviews\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(staydata);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [photos, setPhotos] = useState({});\n\n  const info = {\n    query: 'house',\n    count: 4,\n    orientation: 'landscape',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios\n      .get(\n        `https://api.unsplash.com/photos/random?query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`\n      )\n      .then((data) => {\n        setPhotos({ imgs: data.data });\n      });\n    setIsLoading(false);\n  };\n\n  if (loading) {\n    return (\n      <div className='flex justify-center items-center w-full py-20'>\n        <PulseLoader size={10} color={'#008489'} />\n      </div>\n    );\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className='flex flex-wrap items-start justify-start w-full'>\n        {data.stays.map(\n          (\n            {\n              id,\n              host_is_superhost,\n              img,\n              imglow,\n              size,\n              country,\n              name,\n              price,\n              reviews_per_month,\n              number_of_reviews\n            },\n            index\n          ) => {\n            return (\n              <div className='lg:w-1/3 xl:w-1/4 pb-5'>\n                {photos.imgs ? (\n                  <THundredPlusCard\n                    key={id}\n                    host_is_superhost={host_is_superhost}\n                    img={photos.imgs[index].urls.raw}\n                    imglow={photos.imgs[index].urls.thumb}\n                    size={size}\n                    country={country}\n                    name={name}\n                    price={price}\n                    reviews_per_month={reviews_per_month}\n                    number_of_reviews={number_of_reviews}\n                  />\n                ) : null}\n              </div>\n            );\n          }\n        )}\n      </div>\n      <ShowAll title='Show(2000+)' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}