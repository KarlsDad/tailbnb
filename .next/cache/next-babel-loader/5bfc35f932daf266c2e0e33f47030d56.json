{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Today.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query LocationExperiences($available: String, $location: String) {\\n    experiences(\\n      where: { available: $available, location: $location }\\n      first: 6\\n    ) {\\n      id\\n      title\\n      cost\\n      ratings\\n      reviews\\n      location\\n      img\\n      available\\n      category\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader'; // Components\n\nimport { LocationExperienceCard } from '../functions/LocationExperienceCard';\nimport { ShowAll } from '../ShowAll'; // Wrapper\n\nimport { Section } from '../wrapper/Section';\nvar GET_LOCATION_EXPERIENCES = gql(_templateObject());\nexport var Today = function Today() {\n  var _useQuery = useQuery(GET_LOCATION_EXPERIENCES, {\n    variables: {\n      available: 'Today',\n      location: 'Vancouver'\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState(0),\n      card = _useState[0],\n      setCard = _useState[1];\n\n  if (error) return \"Error! \".concat(error.message);\n  return __jsx(React.Fragment, null, __jsx(Section, {\n    title: \"Today in Vancouver\",\n    phrase: \"Book activities led by local hosts on your next trip.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })) : data && __jsx(React.Fragment, null, screen.width > 800 ? console.log('big') : console.log('small'), data.experiences.map(function (experience, index) {\n    if (index == 4) {}\n\n    return __jsx(\"div\", {\n      className: \"w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(LocationExperienceCard, {\n      key: index,\n      id: experience.id,\n      img: experience.img,\n      title: experience.title,\n      cost: experience.cost,\n      ratings: experience.ratings,\n      reviews: experience.reviews,\n      category: experience.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }))), __jsx(ShowAll, {\n    title: \"Show all experiences\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Today.tsx"],"names":["React","useState","useQuery","gql","PulseLoader","LocationExperienceCard","ShowAll","Section","GET_LOCATION_EXPERIENCES","Today","variables","available","location","loading","error","data","card","setCard","message","screen","width","console","log","experiences","map","experience","index","id","img","title","cost","ratings","reviews","category"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;AACA,SAASC,sBAAT,QAAuC,qCAAvC;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,wBAAwB,GAAGL,GAAH,mBAA9B;AAiCA,OAAO,IAAMM,KAAU,GAAG,SAAbA,KAAa,GAAM;AAAA,kBACGP,QAAQ,CACvCM,wBADuC,EAEvC;AACEE,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE,OADF;AAETC,MAAAA,QAAQ,EAAE;AAFD;AADb,GAFuC,CADX;AAAA,MACtBC,OADsB,aACtBA,OADsB;AAAA,MACbC,KADa,aACbA,KADa;AAAA,MACNC,IADM,aACNA,IADM;;AAAA,kBAUNd,QAAQ,CAAS,CAAT,CAVF;AAAA,MAUvBe,IAVuB;AAAA,MAUjBC,OAViB;;AAY9B,MAAIH,KAAJ,EAAW,wBAAiBA,KAAK,CAACI,OAAvB;AAEX,SACE,4BACE,MAAC,OAAD;AACE,IAAA,KAAK,EAAC,oBADR;AAEE,IAAA,MAAM,EAAC,uDAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,GACN;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAKNE,IAAI,IACF,4BACGI,MAAM,CAACC,KAAP,GAAe,GAAf,GAAqBC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAArB,GAA0CD,OAAO,CAACC,GAAR,CAAY,OAAZ,CAD7C,EAEGP,IAAI,CAACQ,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,UAAD,EAAaC,KAAb,EAAuB;AAC3C,QAAIA,KAAK,IAAI,CAAb,EAAgB,CACf;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,sBAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,EAAE,EAAED,UAAU,CAACE,EAFjB;AAGE,MAAA,GAAG,EAAEF,UAAU,CAACG,GAHlB;AAIE,MAAA,KAAK,EAAEH,UAAU,CAACI,KAJpB;AAKE,MAAA,IAAI,EAAEJ,UAAU,CAACK,IALnB;AAME,MAAA,OAAO,EAAEL,UAAU,CAACM,OANtB;AAOE,MAAA,OAAO,EAAEN,UAAU,CAACO,OAPtB;AAQE,MAAA,QAAQ,EAAEP,UAAU,CAACQ,QARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAcD,GAjBA,CAFH,CAPN,CAHF,EAkCE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADF,CADF;AAwCD,CAtDM","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\n\n// Components\nimport { LocationExperienceCard } from '../functions/LocationExperienceCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_LOCATION_EXPERIENCES = gql`\n  query LocationExperiences($available: String, $location: String) {\n    experiences(\n      where: { available: $available, location: $location }\n      first: 6\n    ) {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n      available\n      category\n    }\n  }\n`;\n\ninterface Experience {\n  id: string;\n  title: string;\n  cost: number;\n  ratings: number;\n  reviews: number;\n  category: string;\n  img: string;\n}\n\ninterface ExperienceData {\n  experiences: Experience[];\n}\n\nexport const Today: any = () => {\n  const { loading, error, data } = useQuery<ExperienceData>(\n    GET_LOCATION_EXPERIENCES,\n    {\n      variables: {\n        available: 'Today',\n        location: 'Vancouver'\n      }\n    }\n  );\n  const [card, setCard] = useState<number>(0);\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section\n        title='Today in Vancouver'\n        phrase='Book activities led by local hosts on your next trip.'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                {screen.width > 800 ? console.log('big') : console.log('small')}\n                {data.experiences.map((experience, index) => {\n                  if (index == 4) {\n                  }\n                  return (\n                    <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5'>\n                      <LocationExperienceCard\n                        key={index}\n                        id={experience.id}\n                        img={experience.img}\n                        title={experience.title}\n                        cost={experience.cost}\n                        ratings={experience.ratings}\n                        reviews={experience.reviews}\n                        category={experience.category}\n                      />\n                    </div>\n                  );\n                })}\n              </>\n            )\n          )}\n        </div>\n        <ShowAll title='Show all experiences' />\n      </Section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}