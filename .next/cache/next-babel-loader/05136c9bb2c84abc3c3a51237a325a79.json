{"ast":null,"code":"import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost'; // Components\n\nimport TopRatedCard from '../presentational/TopRatedCard';\nimport ShowAll from '../ShowAll';\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      country\n      img\n      imglow\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_EXPERIENCES, {\n    fetchPolicy: 'no-cache',\n    ssr: true,\n    pollInterval: 500\n  });\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"flex justify-center items-center w-full py-20\"\n    }, React.createElement(PulseLoader, {\n      size: 10,\n      color: '#008489'\n    }));\n  }\n\n  if (error) return `Error! ${error.message}`;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\"\n  }, data.experiences.map(({\n    id,\n    title,\n    cost,\n    ratings,\n    reviews,\n    country,\n    img,\n    imglow\n  }) => {\n    return React.createElement(\"div\", {\n      className: \"md:w-1/4 sm:w-1/3 w-1/2 pb-5\"\n    }, React.createElement(TopRatedCard, {\n      key: id,\n      img: img,\n      imglow: imglow,\n      title: title,\n      cost: cost,\n      ratings: ratings,\n      reviews: reviews,\n      country: country\n    }));\n  })), React.createElement(ShowAll, {\n    title: \"Show all experiences\"\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/TopRated.js"],"names":["React","useQuery","gql","TopRatedCard","ShowAll","GET_EXPERIENCES","loading","error","data","fetchPolicy","ssr","pollInterval","message","experiences","map","id","title","cost","ratings","reviews","country","img","imglow"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,MAAMC,eAAe,GAAGH,GAAI;;;;;;;;;;;;;CAA5B;AAeA,gBAAe,MAAM;AACnB,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACI,eAAD,EAAkB;AACzDI,IAAAA,WAAW,EAAE,UAD4C;AAEzDC,IAAAA,GAAG,EAAE,IAFoD;AAGzDC,IAAAA,YAAY,EAAE;AAH2C,GAAlB,CAAzC;;AAKA,MAAIL,OAAJ,EAAa;AACX,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAuB,MAAA,KAAK,EAAE;AAA9B,MADF,CADF;AAKD;;AACD,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACK,OAAQ,EAA/B;AACX,SACE,0CACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGJ,IAAI,CAACK,WAAL,CAAiBC,GAAjB,CACC,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,OAA5B;AAAqCC,IAAAA,OAArC;AAA8CC,IAAAA,GAA9C;AAAmDC,IAAAA;AAAnD,GAAD,KAAiE;AAC/D,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEP,EADP;AAEE,MAAA,GAAG,EAAEM,GAFP;AAGE,MAAA,MAAM,EAAEC,MAHV;AAIE,MAAA,KAAK,EAAEN,KAJT;AAKE,MAAA,IAAI,EAAEC,IALR;AAME,MAAA,OAAO,EAAEC,OANX;AAOE,MAAA,OAAO,EAAEC,OAPX;AAQE,MAAA,OAAO,EAAEC;AARX,MADF,CADF;AAcD,GAhBF,CADH,CADF,EAqBE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC;AAAf,IArBF,CADF;AAyBD,CAvCD","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\n// Components\nimport TopRatedCard from '../presentational/TopRatedCard';\nimport ShowAll from '../ShowAll';\n\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      country\n      img\n      imglow\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_EXPERIENCES, {\n    fetchPolicy: 'no-cache',\n    ssr: true,\n    pollInterval: 500\n  });\n  if (loading) {\n    return (\n      <div className='flex justify-center items-center w-full py-20'>\n        <PulseLoader size={10} color={'#008489'} />\n      </div>\n    );\n  }\n  if (error) return `Error! ${error.message}`;\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {data.experiences.map(\n          ({ id, title, cost, ratings, reviews, country, img, imglow }) => {\n            return (\n              <div className='md:w-1/4 sm:w-1/3 w-1/2 pb-5'>\n                <TopRatedCard\n                  key={id}\n                  img={img}\n                  imglow={imglow}\n                  title={title}\n                  cost={cost}\n                  ratings={ratings}\n                  reviews={reviews}\n                  country={country}\n                />\n              </div>\n            );\n          }\n        )}\n      </div>\n      <ShowAll title='Show all experiences' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}