{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Today.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query LocationExperiences($available: String, $city: String) {\\n    experiences(\\n      {first: 6},\\n      {where: { available: $available, location: $location }}\\n    ) {\\n      id\\n      title\\n      cost\\n      ratings\\n      reviews\\n      location\\n      img\\n      available\\n      category\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media'; // Components\n\nimport { LocationExperienceCard } from '../functions/LocationExperienceCard';\nimport { ShowAll } from '../ShowAll'; // Wrapper\n\nimport { Section } from '../wrapper/Section';\nvar GET_LOCATION_EXPERIENCES = gql(_templateObject());\nexport var Today = function Today() {\n  var _useQuery = useQuery(GET_LOCATION_EXPERIENCES, {\n    variables: {\n      available: 'Today',\n      loaction: 'Vancouver'\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState(0),\n      card = _useState[0],\n      setCard = _useState[1];\n\n  var renderContent = function renderContent(data, number) {\n    var content = [];\n\n    for (var i = 0; i < number; i++) {\n      content.push(__jsx(\"div\", {\n        className: \"w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(LocationExperienceCard, {\n        key: i,\n        id: data === null || data === void 0 ? void 0 : data.experiences[i].id,\n        img: data === null || data === void 0 ? void 0 : data.experiences[i].img,\n        title: data === null || data === void 0 ? void 0 : data.experiences[i].title,\n        cost: data === null || data === void 0 ? void 0 : data.experiences[i].cost,\n        ratings: data === null || data === void 0 ? void 0 : data.experiences[i].ratings,\n        reviews: data === null || data === void 0 ? void 0 : data.experiences[i].reviews,\n        category: data === null || data === void 0 ? void 0 : data.experiences[i].category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  };\n\n  if (error) return \"Error! \".concat(error.message);\n  return __jsx(React.Fragment, null, __jsx(Section, {\n    title: \"Today in Vancouver\",\n    phrase: \"Book activities led by local hosts on your next trip.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })) : data && __jsx(React.Fragment, null, __jsx(Media, {\n    queries: {\n      xs: '(min-width: 0px) and (max-width: 739px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xs ? (setCard(4), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      small: '(min-width: 740px) and (max-width: 987px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, function (matches) {\n    return matches.small ? (setCard(4), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      large: '(min-width: 988px) and (max-width: 1299px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, function (matches) {\n    return matches.large ? (setCard(3), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      xl: '(min-width: 1300px) and (max-width: 1529px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xl ? (setCard(4), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      twoxl: '(min-width: 1530px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, function (matches) {\n    return matches.twoxl ? (setCard(6), renderContent(data, card)) : null;\n  }))), __jsx(ShowAll, {\n    title: \"Show all experiences\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Today.tsx"],"names":["React","useState","useQuery","gql","PulseLoader","Media","LocationExperienceCard","ShowAll","Section","GET_LOCATION_EXPERIENCES","Today","variables","available","loaction","loading","error","data","card","setCard","renderContent","number","content","i","push","experiences","id","img","title","cost","ratings","reviews","category","message","xs","matches","small","large","xl","twoxl"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Components\nimport { LocationExperienceCard } from '../functions/LocationExperienceCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_LOCATION_EXPERIENCES = gql`\n  query LocationExperiences($available: String, $city: String) {\n    experiences(\n      {first: 6},\n      {where: { available: $available, location: $location }}\n    ) {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n      available\n      category\n    }\n  }\n`;\n\ninterface Experience {\n  id: string;\n  title: string;\n  cost: number;\n  ratings: number;\n  reviews: number;\n  category: string;\n  img: string;\n}\n\ninterface ExperienceData {\n  experiences: Experience[];\n}\n\nexport const Today: any = () => {\n  const { loading, error, data } = useQuery<ExperienceData>(\n    GET_LOCATION_EXPERIENCES,\n    {\n      variables: {\n        available: 'Today',\n        loaction: 'Vancouver'\n      }\n    }\n  );\n  const [card, setCard] = useState<number>(0);\n\n  const renderContent = (data: ExperienceData, number: number) => {\n    var content = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5'>\n          <LocationExperienceCard\n            key={i}\n            id={data?.experiences[i].id}\n            img={data?.experiences[i].img}\n            title={data?.experiences[i].title}\n            cost={data?.experiences[i].cost}\n            ratings={data?.experiences[i].ratings}\n            reviews={data?.experiences[i].reviews}\n            category={data?.experiences[i].category}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section\n        title='Today in Vancouver'\n        phrase='Book activities led by local hosts on your next trip.'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                <Media\n                  queries={{ xs: '(min-width: 0px) and (max-width: 739px)' }}>\n                  {(matches) =>\n                    matches.xs ? (setCard(4), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    small: '(min-width: 740px) and (max-width: 987px)'\n                  }}>\n                  {(matches) =>\n                    matches.small\n                      ? (setCard(4), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    large: '(min-width: 988px) and (max-width: 1299px)'\n                  }}>\n                  {(matches) =>\n                    matches.large\n                      ? (setCard(3), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    xl: '(min-width: 1300px) and (max-width: 1529px)'\n                  }}>\n                  {(matches) =>\n                    matches.xl ? (setCard(4), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    twoxl: '(min-width: 1530px)'\n                  }}>\n                  {(matches) =>\n                    matches.twoxl\n                      ? (setCard(6), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n              </>\n            )\n          )}\n        </div>\n        <ShowAll title='Show all experiences' />\n      </Section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}