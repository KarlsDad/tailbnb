{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/THundredPlus.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios'; // Component\n\nimport THundredPlusCard from '../presentational/THundredPlusCard';\nimport ShowAll from '../ShowAll';\nconst staydata = gql`\n  query {\n    stays {\n      id\n      host_is_superhost\n      size\n      country\n      name\n      price\n      reviews_per_month\n      number_of_reviews\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(staydata);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: photos,\n    1: setPhotos\n  } = useState({});\n  const info = {\n    query: 'house',\n    count: 4,\n    orientation: 'landscape',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios.get(`https://api.unsplash.com/photos/random?query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`).then(data => {\n      setPhotos({\n        imgs: data.data\n      });\n    });\n    setIsLoading(false);\n  };\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: \"flex justify-center items-center w-full py-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(PulseLoader, {\n      size: 10,\n      color: '#008489',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n  if (error) return `Error! ${error.message}`;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex flex-wrap items-start justify-start w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, data.stays.map(({\n    id,\n    host_is_superhost,\n    img,\n    imglow,\n    size,\n    country,\n    name,\n    price,\n    reviews_per_month,\n    number_of_reviews\n  }, index) => {\n    return __jsx(\"div\", {\n      className: \"lg:w-1/3 xl:w-1/4 pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, photos.imgs ? __jsx(THundredPlusCard, {\n      key: id,\n      host_is_superhost: host_is_superhost,\n      img: photos.imgs[index].urls.raw,\n      imglow: photos.imgs[index].urls.thumb,\n      size: size,\n      country: country,\n      name: name,\n      price: price,\n      reviews_per_month: reviews_per_month,\n      number_of_reviews: number_of_reviews,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : null);\n  })), __jsx(ShowAll, {\n    title: \"Show(2000+)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/THundredPlus.js"],"names":["React","useState","useEffect","useQuery","gql","PulseLoader","axios","THundredPlusCard","ShowAll","staydata","loading","error","data","isLoading","setIsLoading","photos","setPhotos","info","query","count","orientation","client_id","loadData","get","then","imgs","message","stays","map","id","host_is_superhost","img","imglow","size","country","name","price","reviews_per_month","number_of_reviews","index","urls","raw","thumb"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\n\n// Component\nimport THundredPlusCard from '../presentational/THundredPlusCard';\nimport ShowAll from '../ShowAll';\n\nconst staydata = gql`\n  query {\n    stays {\n      id\n      host_is_superhost\n      size\n      country\n      name\n      price\n      reviews_per_month\n      number_of_reviews\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(staydata);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [photos, setPhotos] = useState({});\n\n  const info = {\n    query: 'house',\n    count: 4,\n    orientation: 'landscape',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios\n      .get(\n        `https://api.unsplash.com/photos/random?query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`\n      )\n      .then((data) => {\n        setPhotos({ imgs: data.data });\n      });\n    setIsLoading(false);\n  };\n\n  if (loading) {\n    return (\n      <div className='flex justify-center items-center w-full py-20'>\n        <PulseLoader size={10} color={'#008489'} />\n      </div>\n    );\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className='flex flex-wrap items-start justify-start w-full'>\n        {data.stays.map(\n          (\n            {\n              id,\n              host_is_superhost,\n              img,\n              imglow,\n              size,\n              country,\n              name,\n              price,\n              reviews_per_month,\n              number_of_reviews\n            },\n            index\n          ) => {\n            return (\n              <div className='lg:w-1/3 xl:w-1/4 pb-5'>\n                {photos.imgs ? (\n                  <THundredPlusCard\n                    key={id}\n                    host_is_superhost={host_is_superhost}\n                    img={photos.imgs[index].urls.raw}\n                    imglow={photos.imgs[index].urls.thumb}\n                    size={size}\n                    country={country}\n                    name={name}\n                    price={price}\n                    reviews_per_month={reviews_per_month}\n                    number_of_reviews={number_of_reviews}\n                  />\n                ) : null}\n              </div>\n            );\n          }\n        )}\n      </div>\n      <ShowAll title='Show(2000+)' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}