{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Desktop/nextbnb/src/components/containers/Hosts.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader'; // Components\n\nimport { HostCard } from '../functions/HostCard'; // Wrapper\n\nimport { ExploreSection } from '../wrapper/ExploreSection';\nimport cuid from 'cuid';\nconst experiencedata = gql`\n  query {\n    experiences {\n      id\n      title\n      location\n      country\n      img\n    }\n  }\n`;\nexport const Hosts = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(experiencedata);\n  if (error) return `Error! ${error.message}`;\n  return __jsx(React.Fragment, null, __jsx(ExploreSection, {\n    title: \"Meet hosts around the world\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })) : __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, data && data.experiences.map(({\n    id,\n    title,\n    location,\n    country,\n    img\n  }) => {\n    return __jsx(React.Fragment, {\n      key: cuid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"md:w-1/4 sm:w-1/3 w-1/2 pb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, __jsx(HostCard, {\n      key: id,\n      title: title,\n      img: img,\n      location: location,\n      country: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    })));\n  }))));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/src/components/containers/Hosts.tsx"],"names":["React","useQuery","gql","PulseLoader","HostCard","ExploreSection","cuid","experiencedata","Hosts","loading","error","data","message","experiences","map","id","title","location","country","img"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,uBAAzB,C,CAEA;;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,cAAc,GAAGL,GAAI;;;;;;;;;;CAA3B;AAyBA,OAAO,MAAMM,KAAU,GAAG,MAAM;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAAiBM,cAAjB,CAAzC;AAEA,MAAIG,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,SACE,4BACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,6BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,GACN;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAKN;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,IACHA,IAAI,CAACE,WAAL,CAAiBC,GAAjB,CAAqB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA;AAAhC,GAAD,KAA2C;AAC9D,WACE,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEb,IAAI,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AACE,MAAA,GAAG,EAAES,EADP;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,GAAG,EAAEG,GAHP;AAIE,MAAA,QAAQ,EAAEF,QAJZ;AAKE,MAAA,OAAO,EAAEC,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAaD,GAdD,CAFJ,CANJ,CADF,CADF;AA8BD,CAnCM","sourcesContent":["import * as React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\n\n// Components\nimport { HostCard } from '../functions/HostCard';\n\n// Wrapper\nimport { ExploreSection } from '../wrapper/ExploreSection';\nimport cuid from 'cuid';\n\nconst experiencedata = gql`\n  query {\n    experiences {\n      id\n      title\n      location\n      country\n      img\n    }\n  }\n`;\n\ninterface Experience {\n  id: string;\n  title: string;\n  location: string;\n  country: string;\n  img: string;\n  imglow: string;\n}\n\ninterface ExperienceData {\n  experiences: Experience[];\n}\n\nexport const Hosts: any = () => {\n  const { loading, error, data } = useQuery<ExperienceData>(experiencedata);\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <ExploreSection title='Meet hosts around the world'>\n        {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          <div className='flex items-start justify-start flex-wrap w-full'>\n            {data &&\n              data.experiences.map(({ id, title, location, country, img }) => {\n                return (\n                  <React.Fragment key={cuid()}>\n                    <div className='md:w-1/4 sm:w-1/3 w-1/2 pb-5'>\n                      <HostCard\n                        key={id}\n                        title={title}\n                        img={img}\n                        location={location}\n                        country={country}\n                      />\n                    </div>\n                  </React.Fragment>\n                );\n              })}\n          </div>\n        )}\n      </ExploreSection>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}