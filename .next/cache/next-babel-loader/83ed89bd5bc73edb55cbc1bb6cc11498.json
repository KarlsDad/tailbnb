{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/TopRated.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    experiences {\\n      id\\n      title\\n      cost\\n      ratings\\n      reviews\\n      ratings\\n      location\\n      imglow\\n      img\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media'; // Components\n\nimport { TopRatedCard } from '../presentational/TopRatedCard';\nimport { ShowAll } from '../ShowAll';\nvar GET_EXPERIENCES = gql(_templateObject());\nexport var TopRated = function TopRated() {\n  var _useQuery = useQuery(GET_EXPERIENCES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState(0),\n      card = _useState[0],\n      setCard = _useState[1];\n\n  var renderContent = function renderContent(data, number) {\n    var content = [];\n\n    for (var i = 0; i < number; i++) {\n      content.push(__jsx(\"div\", {\n        className: \"w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 2xl:w-1/6 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(TopRatedCard, {\n        key: data[i].id,\n        id: data[i].id,\n        img: data[i].img,\n        title: data[i].title,\n        cost: data[i].cost,\n        ratings: data[i].ratings,\n        reviews: data[i].reviews,\n        location: data[i].location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  };\n\n  if (error) return \"Error! \".concat(error.message);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })) : data && __jsx(React.Fragment, null, __jsx(Media, {\n    queries: {\n      xs: '(min-width: 0px) and (max-width: 739px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xs ? (setCard(4), renderContent(data.experiences, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      small: '(min-width: 740px) and (max-width: 987px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, function (matches) {\n    return matches.small ? (setCard(3), renderContent(data.experiences, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      large: '(min-width: 988px) and (max-width: 1299px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, function (matches) {\n    return matches.large ? (setCard(4), renderContent(data.experiences, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      xl: '(min-width: 1300px) and (max-width: 1529px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xl ? (setCard(5), renderContent(data.experiences, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      xl: '(min-width: 1530px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xl ? (setCard(6), renderContent(data.experiences, card)) : null;\n  }))), __jsx(ShowAll, {\n    title: \"Show all experiences\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/TopRated.tsx"],"names":["React","useState","useQuery","gql","PulseLoader","Media","TopRatedCard","ShowAll","GET_EXPERIENCES","TopRated","loading","error","data","card","setCard","renderContent","number","content","i","push","id","img","title","cost","ratings","reviews","location","message","xs","matches","experiences","small","large","xl"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Components\nimport { TopRatedCard } from '../presentational/TopRatedCard';\nimport { ShowAll } from '../ShowAll';\n\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      ratings\n      location\n      imglow\n      img\n    }\n  }\n`;\n\ninterface Experience {\n  id: string;\n  title: string;\n  cost: number;\n  ratings: number;\n  reviews: number;\n  location: string;\n  img: string;\n}\n\ninterface ExperienceData {\n  experiences: Experience[];\n}\n\nexport const TopRated: () => string | JSX.Element = () => {\n  const { loading, error, data } = useQuery<ExperienceData>(GET_EXPERIENCES);\n  const [card, setCard] = useState<number>(0);\n\n  const renderContent = (data: Experience[], number: number) => {\n    var content = [];\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 2xl:w-1/6 pb-5'>\n          <TopRatedCard\n            key={data[i].id}\n            id={data[i].id}\n            img={data[i].img}\n            title={data[i].title}\n            cost={data[i].cost}\n            ratings={data[i].ratings}\n            reviews={data[i].reviews}\n            location={data[i].location}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          data && (\n            <>\n              <Media\n                queries={{ xs: '(min-width: 0px) and (max-width: 739px)' }}>\n                {(matches) =>\n                  matches.xs\n                    ? (setCard(4), renderContent(data.experiences, card))\n                    : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  small: '(min-width: 740px) and (max-width: 987px)'\n                }}>\n                {(matches) =>\n                  matches.small\n                    ? (setCard(3), renderContent(data.experiences, card))\n                    : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  large: '(min-width: 988px) and (max-width: 1299px)'\n                }}>\n                {(matches) =>\n                  matches.large\n                    ? (setCard(4), renderContent(data.experiences, card))\n                    : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  xl: '(min-width: 1300px) and (max-width: 1529px)'\n                }}>\n                {(matches) =>\n                  matches.xl\n                    ? (setCard(5), renderContent(data.experiences, card))\n                    : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  xl: '(min-width: 1530px)'\n                }}>\n                {(matches) =>\n                  matches.xl\n                    ? (setCard(6), renderContent(data.experiences, card))\n                    : null\n                }\n              </Media>\n            </>\n          )\n        )}\n      </div>\n      <ShowAll title='Show all experiences' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}