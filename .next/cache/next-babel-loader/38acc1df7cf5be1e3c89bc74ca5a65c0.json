{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    adventures {\\n      id\\n      title\\n      period\\n      cost\\n      country\\n      img\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media'; // Component\n\nimport { AdventureCard } from '../presentational/AdventureCard';\nimport { ShowAll } from '../ShowAll';\nvar GET_ADVENTURES = gql(_templateObject());\nexport var Adventures = function Adventures() {\n  var _useQuery = useQuery(GET_ADVENTURES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState(0),\n      card = _useState[0],\n      setCard = _useState[1];\n\n  var renderContent = function renderContent(data, number) {\n    var content = [];\n\n    for (var i = 0; i < (data === null || data === void 0 ? void 0 : data.adventures.length); i++) {\n      content.push(__jsx(\"div\", {\n        className: \"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(AdventureCard, {\n        key: i,\n        id: data === null || data === void 0 ? void 0 : data.adventures[i].id,\n        img: data === null || data === void 0 ? void 0 : data.adventures[i].img,\n        country: data === null || data === void 0 ? void 0 : data.adventures[i].country,\n        title: data === null || data === void 0 ? void 0 : data.adventures[i].title,\n        cost: data === null || data === void 0 ? void 0 : data.adventures[i].cost,\n        period: data === null || data === void 0 ? void 0 : data.adventures[i].period,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n\n    data === null || data === void 0 ? void 0 : data.adventures.map(function (adventure, index) {});\n    return content;\n  };\n\n  if (error) return \"Error! \".concat(error.message); // if (!loading) {\n  //   console.log(data?.adventures);\n  // }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })) : data && __jsx(React.Fragment, null, __jsx(Media, {\n    queries: {\n      small: '(min-width: 0px) and (max-width: 640px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, function (matches) {\n    return matches.small ? (setCard(4), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      large: '(min-width: 641px) and (max-width: 767px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, function (matches) {\n    return matches.large ? (setCard(3), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      xl: '(min-width: 768px) and (max-width: 1023px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xl ? (setCard(5), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      twoxl: '(min-width: 1024px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, function (matches) {\n    return matches.twoxl ? (setCard(6), renderContent(data, card)) : null;\n  }))), __jsx(ShowAll, {\n    title: \"Show all adventures\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.tsx"],"names":["React","useState","useQuery","gql","PulseLoader","Media","AdventureCard","ShowAll","GET_ADVENTURES","Adventures","loading","error","data","card","setCard","renderContent","number","content","i","adventures","length","push","id","img","country","title","cost","period","map","adventure","index","message","small","matches","large","xl","twoxl"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Component\nimport { AdventureCard } from '../presentational/AdventureCard';\nimport { ShowAll } from '../ShowAll';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n    }\n  }\n`;\n\ninterface Adventure {\n  id: string;\n  title: string;\n  period: number;\n  cost: number;\n  country: string;\n  img: string;\n}\n\ninterface AdventureData {\n  adventures: Adventure[];\n}\n\nexport const Adventures: any = () => {\n  const { loading, error, data } = useQuery<AdventureData>(GET_ADVENTURES);\n  const [card, setCard] = useState<number>(0);\n\n  const renderContent = (data: AdventureData, number: number) => {\n    var content: any[] = [];\n\n    for (let i = 0; i < data?.adventures.length; i++) {\n      content.push(\n        <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n          <AdventureCard\n            key={i}\n            id={data?.adventures[i].id}\n            img={data?.adventures[i].img}\n            country={data?.adventures[i].country}\n            title={data?.adventures[i].title}\n            cost={data?.adventures[i].cost}\n            period={data?.adventures[i].period}\n          />\n        </div>\n      );\n    }\n\n    data?.adventures.map((adventure, index) => {});\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n\n  // if (!loading) {\n  //   console.log(data?.adventures);\n  // }\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          data && (\n            <>\n              <Media\n                queries={{ small: '(min-width: 0px) and (max-width: 640px)' }}>\n                {(matches) =>\n                  matches.small ? (setCard(4), renderContent(data, card)) : null\n                }\n              </Media>\n\n              <Media\n                queries={{\n                  large: '(min-width: 641px) and (max-width: 767px)'\n                }}>\n                {(matches) =>\n                  matches.large ? (setCard(3), renderContent(data, card)) : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  xl: '(min-width: 768px) and (max-width: 1023px)'\n                }}>\n                {(matches) =>\n                  matches.xl ? (setCard(5), renderContent(data, card)) : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  twoxl: '(min-width: 1024px)'\n                }}>\n                {(matches) =>\n                  matches.twoxl ? (setCard(6), renderContent(data, card)) : null\n                }\n              </Media>\n            </>\n          )\n        )}\n      </div>\n\n      <ShowAll title='Show all adventures' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}