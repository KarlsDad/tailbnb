{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Desktop/nextbnb/src/components/wrapper/SectionOverflow.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nexport const SectionOverflow = ({\n  title,\n  phrase,\n  children\n}) => {\n  function renderPhrase(phrase) {\n    if (phrase) {\n      return __jsx(React.Fragment, null, __jsx(\"h3\", {\n        style: {\n          fontFamily: 'airbnb-medium'\n        },\n        className: \"scrollable text-gray-850 text-2xl pt-3 w-5/6 leading-7 mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, title), __jsx(\"p\", {\n        style: {\n          fontFamily: 'airbnb-book'\n        },\n        className: \"text-sm md:text-base scrollable text-md mb-5 text-gray-750 pb-3 leading-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, phrase));\n    } else {\n      return __jsx(React.Fragment, null, __jsx(\"h3\", {\n        style: {\n          fontFamily: 'airbnb-medium'\n        },\n        className: \"scrollable text-gray-850 text-2xl py-3 w-5/6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, title));\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"px-6 md:px-10 xl:px-32 mx-auto py-5 overflow-x-hidden overflow-y-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, renderPhrase(phrase), children);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/src/components/wrapper/SectionOverflow.tsx"],"names":["React","SectionOverflow","title","phrase","children","renderPhrase","fontFamily"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAQA,OAAO,MAAMC,eAA+B,GAAG,CAAC;AAC9CC,EAAAA,KAD8C;AAE9CC,EAAAA,MAF8C;AAG9CC,EAAAA;AAH8C,CAAD,KAIzC;AACJ,WAASC,YAAT,CAAsBF,MAAtB,EAAkD;AAChD,QAAIA,MAAJ,EAAY;AACV,aACE,4BACE;AACE,QAAA,KAAK,EAAE;AAAEG,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,SAAS,EAAC,6DAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGJ,KAHH,CADF,EAME;AACE,QAAA,KAAK,EAAE;AAAEI,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,SAAS,EAAC,2EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGH,MAHH,CANF,CADF;AAcD,KAfD,MAeO;AACL,aACE,4BACE;AACE,QAAA,KAAK,EAAE;AAAEG,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,SAAS,EAAC,8CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGJ,KAHH,CADF,CADF;AASD;AACF;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,YAAY,CAACF,MAAD,CADf,EAEGC,QAFH,CADF;AAMD,CAvCM","sourcesContent":["import * as React from 'react';\n\ninterface Prop {\n  title: string;\n  phrase?: string | undefined;\n  children: React.ReactNode;\n}\n\nexport const SectionOverflow: React.FC<Prop> = ({\n  title,\n  phrase,\n  children\n}) => {\n  function renderPhrase(phrase: string | undefined) {\n    if (phrase) {\n      return (\n        <>\n          <h3\n            style={{ fontFamily: 'airbnb-medium' }}\n            className='scrollable text-gray-850 text-2xl pt-3 w-5/6 leading-7 mb-2'>\n            {title}\n          </h3>\n          <p\n            style={{ fontFamily: 'airbnb-book' }}\n            className='text-sm md:text-base scrollable text-md mb-5 text-gray-750 pb-3 leading-4'>\n            {phrase}\n          </p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <h3\n            style={{ fontFamily: 'airbnb-medium' }}\n            className='scrollable text-gray-850 text-2xl py-3 w-5/6'>\n            {title}\n          </h3>\n        </>\n      );\n    }\n  }\n  return (\n    <div className='px-6 md:px-10 xl:px-32 mx-auto py-5 overflow-x-hidden overflow-y-hidden'>\n      {renderPhrase(phrase)}\n      {children}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}