{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Today.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media'; // Components\n\nimport { TopRatedCard } from '../functions/TopRatedCard';\nimport { ShowAll } from '../ShowAll'; // Wrapper\n\nimport { Section } from '../wrapper/Section';\nconst GET_TODAY_EXPERIENCES = gql`\n  query TodayExperiences($available: String) {\n    experiences(where: { available: $available }) {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n    }\n  }\n`;\nexport const Today = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TODAY_EXPERIENCES, {\n    variables: {\n      id: 'Tomorrow'\n    }\n  });\n  const {\n    0: card,\n    1: setCard\n  } = useState(0);\n\n  const renderContent = (data, number) => {\n    var content = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(__jsx(\"div\", {\n        className: \"w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(TopRatedCard, {\n        key: i,\n        id: data === null || data === void 0 ? void 0 : data.experiences[i].id,\n        img: data === null || data === void 0 ? void 0 : data.experiences[i].img,\n        title: data === null || data === void 0 ? void 0 : data.experiences[i].title,\n        cost: data === null || data === void 0 ? void 0 : data.experiences[i].cost,\n        ratings: data === null || data === void 0 ? void 0 : data.experiences[i].ratings,\n        reviews: data === null || data === void 0 ? void 0 : data.experiences[i].reviews,\n        location: data === null || data === void 0 ? void 0 : data.experiences[i].location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n  return __jsx(React.Fragment, null, __jsx(Section, {\n    title: \"Top-rated experiences\",\n    phrase: \"Book activities led by local hosts on your next trip.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })) : data && __jsx(React.Fragment, null, __jsx(Media, {\n    queries: {\n      xs: '(min-width: 0px) and (max-width: 739px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, matches => matches.xs ? (setCard(4), renderContent(data, card)) : null), __jsx(Media, {\n    queries: {\n      small: '(min-width: 740px) and (max-width: 987px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, matches => matches.small ? (setCard(3), renderContent(data, card)) : null), __jsx(Media, {\n    queries: {\n      large: '(min-width: 988px) and (max-width: 1299px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, matches => matches.large ? (setCard(3), renderContent(data, card)) : null), __jsx(Media, {\n    queries: {\n      xl: '(min-width: 1300px) and (max-width: 1529px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, matches => matches.xl ? (setCard(4), renderContent(data, card)) : null), __jsx(Media, {\n    queries: {\n      twoxl: '(min-width: 1530px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, matches => matches.twoxl ? (setCard(6), renderContent(data, card)) : null))), __jsx(ShowAll, {\n    title: \"Show all experiences\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Today.tsx"],"names":["React","useState","useQuery","gql","PulseLoader","Media","TopRatedCard","ShowAll","Section","GET_TODAY_EXPERIENCES","Today","loading","error","data","variables","id","card","setCard","renderContent","number","content","i","push","experiences","img","title","cost","ratings","reviews","location","message","xs","matches","small","large","xl","twoxl"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Components\nimport { TopRatedCard } from '../functions/TopRatedCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_TODAY_EXPERIENCES = gql`\n  query TodayExperiences($available: String) {\n    experiences(where: { available: $available }) {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n    }\n  }\n`;\n\ninterface Experience {\n  id: string;\n  title: string;\n  cost: number;\n  ratings: number;\n  reviews: number;\n  location: string;\n  img: string;\n}\n\ninterface ExperienceData {\n  experiences: Experience[];\n}\n\nexport const Today: any = () => {\n  const { loading, error, data } = useQuery<ExperienceData>(\n    GET_TODAY_EXPERIENCES,\n    {\n      variables: {\n        id: 'Tomorrow'\n      }\n    }\n  );\n  const [card, setCard] = useState<number>(0);\n\n  const renderContent = (data: ExperienceData, number: number) => {\n    var content: any[] = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5'>\n          <TopRatedCard\n            key={i}\n            id={data?.experiences[i].id}\n            img={data?.experiences[i].img}\n            title={data?.experiences[i].title}\n            cost={data?.experiences[i].cost}\n            ratings={data?.experiences[i].ratings}\n            reviews={data?.experiences[i].reviews}\n            location={data?.experiences[i].location}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section\n        title='Top-rated experiences'\n        phrase='Book activities led by local hosts on your next trip.'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                <Media\n                  queries={{ xs: '(min-width: 0px) and (max-width: 739px)' }}>\n                  {(matches) =>\n                    matches.xs ? (setCard(4), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    small: '(min-width: 740px) and (max-width: 987px)'\n                  }}>\n                  {(matches) =>\n                    matches.small\n                      ? (setCard(3), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    large: '(min-width: 988px) and (max-width: 1299px)'\n                  }}>\n                  {(matches) =>\n                    matches.large\n                      ? (setCard(3), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    xl: '(min-width: 1300px) and (max-width: 1529px)'\n                  }}>\n                  {(matches) =>\n                    matches.xl ? (setCard(4), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    twoxl: '(min-width: 1530px)'\n                  }}>\n                  {(matches) =>\n                    matches.twoxl\n                      ? (setCard(6), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n              </>\n            )\n          )}\n        </div>\n        <ShowAll title='Show all experiences' />\n      </Section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}