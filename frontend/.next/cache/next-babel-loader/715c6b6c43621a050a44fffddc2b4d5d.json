{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media'; // Component\n\nimport { ShowAll } from '../ShowAll';\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n    }\n  }\n`;\nexport const Adventures = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ADVENTURES);\n  const {\n    0: card,\n    1: setCard\n  } = useState(0); // const renderContent = (data: Adventure[], number: number) => {\n  //   var content = [];\n  //   for (let i = 0; i < number; i++) {\n  //     content.push(\n  //       <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n  //         <AdventureCard\n  //           key={i}\n  //           id={data[i].id}\n  //           img={data[i].img}\n  //           country={data[i].country}\n  //           title={data[i].title}\n  //           cost={data[i].cost}\n  //           period={data[i].period}\n  //         />\n  //       </div>\n  //     );\n  //   }\n  //   return content;\n  // };\n\n  if (error) return `Error! ${error.message}`;\n\n  if (data) {\n    console.log(data);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })) : data && __jsx(React.Fragment, null, __jsx(Media, {\n    queries: {\n      large: '(min-width: 641px) and (max-width: 767px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, matches => matches.large ? (setCard(3), renderContent(data.adventures, card)) : null), __jsx(Media, {\n    queries: {\n      xl: '(min-width: 768px) and (max-width: 1023px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, matches => matches.xl ? (setCard(5), renderContent(data.adventures, card)) : null), __jsx(Media, {\n    queries: {\n      twoxl: '(min-width: 1024px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, matches => matches.twoxl ? (setCard(6), renderContent(data.adventures, card)) : null))), __jsx(ShowAll, {\n    title: \"Show all adventures\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.tsx"],"names":["React","useState","useQuery","gql","PulseLoader","Media","ShowAll","GET_ADVENTURES","Adventures","loading","error","data","card","setCard","message","console","log","large","matches","renderContent","adventures","xl","twoxl"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AAEA,SAASC,OAAT,QAAwB,YAAxB;AAEA,MAAMC,cAAc,GAAGJ,GAAI;;;;;;;;;;;CAA3B;AA0BA,OAAO,MAAMK,UAAe,GAAG,MAAM;AACnC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAAgBK,cAAhB,CAAzC;AACA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAS,CAAT,CAAhC,CAFmC,CAInC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIS,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACI,OAAQ,EAA/B;;AAEX,MAAIH,IAAJ,EAAU;AACRI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD;;AACD,SACE,4BACE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,GACN;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAKNE,IAAI,IACF,4BAUE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPM,MAAAA,KAAK,EAAE;AADA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIC,OAAD,IACCA,OAAO,CAACD,KAAR,IACKJ,OAAO,CAAC,CAAD,CAAP,EAAYM,aAAa,CAACR,IAAI,CAACS,UAAN,EAAkBR,IAAlB,CAD9B,IAEI,IAPR,CAVF,EAoBE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPS,MAAAA,EAAE,EAAE;AADG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIH,OAAD,IACCA,OAAO,CAACG,EAAR,IACKR,OAAO,CAAC,CAAD,CAAP,EAAYM,aAAa,CAACR,IAAI,CAACS,UAAN,EAAkBR,IAAlB,CAD9B,IAEI,IAPR,CApBF,EA8BE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPU,MAAAA,KAAK,EAAE;AADA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIJ,OAAD,IACCA,OAAO,CAACI,KAAR,IACKT,OAAO,CAAC,CAAD,CAAP,EAAYM,aAAa,CAACR,IAAI,CAACS,UAAN,EAAkBR,IAAlB,CAD9B,IAEI,IAPR,CA9BF,CAPN,CADF,EAqDE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArDF,CADF;AAyDD,CAtFM","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Component\nimport { AdventureCard } from '../presentational/AdventureCard';\nimport { ShowAll } from '../ShowAll';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n    }\n  }\n`;\n\ninterface Adventure {\n  id: string;\n  title: string;\n  period: number;\n  cost: number;\n  country: string;\n  img: string;\n}\n\ninterface AdventureData {\n  adventures: Adventure[];\n}\n\nexport const Adventures: any = () => {\n  const { loading, error, data } = useQuery<AdventureData>(GET_ADVENTURES);\n  const [card, setCard] = useState<number>(0);\n\n  // const renderContent = (data: Adventure[], number: number) => {\n  //   var content = [];\n  //   for (let i = 0; i < number; i++) {\n  //     content.push(\n  //       <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n  //         <AdventureCard\n  //           key={i}\n  //           id={data[i].id}\n  //           img={data[i].img}\n  //           country={data[i].country}\n  //           title={data[i].title}\n  //           cost={data[i].cost}\n  //           period={data[i].period}\n  //         />\n  //       </div>\n  //     );\n  //   }\n  //   return content;\n  // };\n\n  if (error) return `Error! ${error.message}`;\n\n  if (data) {\n    console.log(data);\n  }\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          data && (\n            <>\n              {/* <Media\n                queries={{ small: '(min-width: 0px) and (max-width: 640px)' }}>\n                {(matches) =>\n                  matches.small\n                    ? (setCard(4), renderContent(data.adventures, card))\n                    : null\n                }\n              </Media> */}\n\n              <Media\n                queries={{\n                  large: '(min-width: 641px) and (max-width: 767px)'\n                }}>\n                {(matches) =>\n                  matches.large\n                    ? (setCard(3), renderContent(data.adventures, card))\n                    : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  xl: '(min-width: 768px) and (max-width: 1023px)'\n                }}>\n                {(matches) =>\n                  matches.xl\n                    ? (setCard(5), renderContent(data.adventures, card))\n                    : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  twoxl: '(min-width: 1024px)'\n                }}>\n                {(matches) =>\n                  matches.twoxl\n                    ? (setCard(6), renderContent(data.adventures, card))\n                    : null\n                }\n              </Media>\n            </>\n          )\n        )}\n      </div>\n\n      <ShowAll title='Show all adventures' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}