{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/pages/host/services.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useState } from 'react'; // Modals\n\nimport { HostMenuModal } from '../../components/modals/HostMenuModal'; // Layout\n\nimport { HostHeader } from '../../components/host/layout/HostHeader';\nimport { HostServicesBanner } from '../../components/hostservices/layout/HostServicesBanner';\nimport { FindTeam } from '../../components/hostservices/layout/FindTeam';\nimport { GetStarted } from '../../components/hostservices/layout/GetStarted';\nimport { PeaceOfMind } from '../../components/hostservices/layout/PeaceOfMind';\nimport { Questions } from '../../components/host/layout/Questions';\nimport { NewFooter } from '../../components/layout/NewFooter'; // Functions\n\nimport { FindOutCard } from '../../components/host/functions/FindOutCard';\nimport { HostReady } from '../../components/host/layout/HostReady'; // Images\n\nconst readyServices = require('../../../public/img/high/ready-earn-services.jpg'); // Next\n\n\nconst services = () => {\n  const {\n    0: menuModal,\n    1: setMenuModal\n  } = useState(false);\n\n  const changeMenuModal = () => {\n    setMenuModal(!menuModal);\n  };\n\n  const questions = [{\n    question: 'Who will my hosting team be?'\n  }, {\n    question: 'Am I covered if something goes wrong?'\n  }, {\n    question: 'Am I eligible for hosting services?'\n  }, {\n    question: 'What do I do with my personal belongings?'\n  }, {\n    question: 'I run a hosting team. Can I offer hosting services through Airbnb?'\n  }];\n  return __jsx(React.Fragment, null, __jsx(HostHeader, {\n    color: \"#008489\",\n    section: \"hosting services\",\n    switchMenuModal: changeMenuModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), menuModal ? __jsx(HostMenuModal, {\n    switchMenuModal: changeMenuModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }\n  }) : null, __jsx(\"div\", {\n    className: \"mt-16 md:mt-32 lg:mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(HostServicesBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), __jsx(FindTeam, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(GetStarted, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"my-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(FindOutCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), __jsx(PeaceOfMind, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(Questions, {\n    title: \"Your questions answered\",\n    questions: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(HostReady, {\n    title: \"Ready to connect with a hosting team?\",\n    img: readyServices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), __jsx(NewFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default services;","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/pages/host/services.tsx"],"names":["React","useState","HostMenuModal","HostHeader","HostServicesBanner","FindTeam","GetStarted","PeaceOfMind","Questions","NewFooter","FindOutCard","HostReady","readyServices","require","services","menuModal","setMenuModal","changeMenuModal","questions","question"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,uCAA9B,C,CAEA;;AACA,SAASC,UAAT,QAA2B,yCAA3B;AACA,SAASC,kBAAT,QAAmC,yDAAnC;AACA,SAASC,QAAT,QAAyB,+CAAzB;AACA,SAASC,UAAT,QAA2B,iDAA3B;AACA,SAASC,WAAT,QAA4B,kDAA5B;AACA,SAASC,SAAT,QAA0B,wCAA1B;AACA,SAASC,SAAT,QAA0B,mCAA1B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,6CAA5B;AACA,SAASC,SAAT,QAA0B,wCAA1B,C,CAEA;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,kDAAD,CAA7B,C,CAEA;;;AAGA,MAAMC,QAAsB,GAAG,MAAM;AACnC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMgB,eAAe,GAAG,MAAM;AAC5BD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,QAAMG,SAAS,GAAG,CAChB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GADgB,EAEhB;AAAEA,IAAAA,QAAQ,EAAE;AAAZ,GAFgB,EAGhB;AAAEA,IAAAA,QAAQ,EAAE;AAAZ,GAHgB,EAIhB;AAAEA,IAAAA,QAAQ,EAAE;AAAZ,GAJgB,EAKhB;AACEA,IAAAA,QAAQ,EACN;AAFJ,GALgB,CAAlB;AAWA,SACE,4BACE,MAAC,UAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,kBAFV;AAGE,IAAA,eAAe,EAAEF,eAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGF,SAAS,GAAG,MAAC,aAAD;AAAe,IAAA,eAAe,EAAEE,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyD,IANrE,EAOE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EAUE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,EAeE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,yBAAjB;AAA2C,IAAA,SAAS,EAAEC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,uCADR;AAEE,IAAA,GAAG,EAAEN,aAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAqBE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AAyBD,CA3CD;;AA6CA,eAAeE,QAAf","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\n\n// Modals\nimport { HostMenuModal } from '../../components/modals/HostMenuModal';\n\n// Layout\nimport { HostHeader } from '../../components/host/layout/HostHeader';\nimport { HostServicesBanner } from '../../components/hostservices/layout/HostServicesBanner';\nimport { FindTeam } from '../../components/hostservices/layout/FindTeam';\nimport { GetStarted } from '../../components/hostservices/layout/GetStarted';\nimport { PeaceOfMind } from '../../components/hostservices/layout/PeaceOfMind';\nimport { Questions } from '../../components/host/layout/Questions';\nimport { NewFooter } from '../../components/layout/NewFooter';\n\n// Functions\nimport { FindOutCard } from '../../components/host/functions/FindOutCard';\nimport { HostReady } from '../../components/host/layout/HostReady';\n\n// Images\nconst readyServices = require('../../../public/img/high/ready-earn-services.jpg');\n\n// Next\nimport { NextPage } from 'next';\n\nconst services: NextPage<{}> = () => {\n  const [menuModal, setMenuModal] = useState(false);\n\n  const changeMenuModal = () => {\n    setMenuModal(!menuModal);\n  };\n\n  const questions = [\n    { question: 'Who will my hosting team be?' },\n    { question: 'Am I covered if something goes wrong?' },\n    { question: 'Am I eligible for hosting services?' },\n    { question: 'What do I do with my personal belongings?' },\n    {\n      question:\n        'I run a hosting team. Can I offer hosting services through Airbnb?'\n    }\n  ];\n\n  return (\n    <>\n      <HostHeader\n        color='#008489'\n        section='hosting services'\n        switchMenuModal={changeMenuModal}\n      />\n      {menuModal ? <HostMenuModal switchMenuModal={changeMenuModal} /> : null}\n      <div className='mt-16 md:mt-32 lg:mt-0'>\n        <HostServicesBanner />\n      </div>\n      <FindTeam />\n      <GetStarted />\n      <div className='my-16'>\n        <FindOutCard />\n      </div>\n      <PeaceOfMind />\n      <Questions title='Your questions answered' questions={questions} />\n      <HostReady\n        title='Ready to connect with a hosting team?'\n        img={readyServices}\n      />\n      <NewFooter />\n    </>\n  );\n};\n\nexport default services;\n"]},"metadata":{},"sourceType":"module"}