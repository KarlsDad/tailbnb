{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios'; // Component\n\nimport AdventureCard from '../presentational/AdventureCard';\nimport ShowAll from '../ShowAll';\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n      imglow\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ADVENTURES);\n  const [isLoading, setIsLoading] = useState(true);\n  const [photos, setPhotos] = useState({});\n  const info = {\n    query: 'adventure',\n    count: 4,\n    orientation: 'portrait',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n  useEffect(() => {\n    loadData();\n  }, []); // const loadData = async () => {\n  //   axios\n  //     .get(\n  //       `https://api.unsplash.com/photos/random?query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`\n  //     )\n  //     .then((data) => {\n  //       setPhotos({ imgs: data.data });\n  //     });\n  //   setIsLoading(false);\n  // };\n\n  const loadData = async () => {\n    axios.get(`https://source.unsplash.com/1600x900/?adventures`).then(data => {\n      console.log(data);\n    });\n    setIsLoading(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\"\n  }), React.createElement(ShowAll, {\n    title: \"Show all adventures\"\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.js"],"names":["React","useState","useEffect","useQuery","gql","PulseLoader","axios","AdventureCard","ShowAll","GET_ADVENTURES","loading","error","data","isLoading","setIsLoading","photos","setPhotos","info","query","count","orientation","client_id","loadData","get","then","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,MAAMC,cAAc,GAAGL,GAAI;;;;;;;;;;;;CAA3B;AAcA,gBAAe,MAAM;AACnB,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACM,cAAD,CAAzC;AAEA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMgB,IAAI,GAAG;AACXC,IAAAA,KAAK,EAAE,WADI;AAEXC,IAAAA,KAAK,EAAE,CAFI;AAGXC,IAAAA,WAAW,EAAE,UAHF;AAIXC,IAAAA,SAAS,EAAE;AAJA,GAAb;AAOAnB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT,CAbmB,CAiBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMA,QAAQ,GAAG,YAAY;AAC3BhB,IAAAA,KAAK,CACFiB,GADH,CACQ,kDADR,EAEGC,IAFH,CAESZ,IAAD,IAAU;AACda,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD,KAJH;AAKAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAPD;;AASA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC;AAAf,IADF,EA4BE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC;AAAf,IA5BF,CADF;AAgCD,CArED","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\n\n// Component\nimport AdventureCard from '../presentational/AdventureCard';\nimport ShowAll from '../ShowAll';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n      imglow\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_ADVENTURES);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [photos, setPhotos] = useState({});\n\n  const info = {\n    query: 'adventure',\n    count: 4,\n    orientation: 'portrait',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  // const loadData = async () => {\n  //   axios\n  //     .get(\n  //       `https://api.unsplash.com/photos/random?query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`\n  //     )\n  //     .then((data) => {\n  //       setPhotos({ imgs: data.data });\n  //     });\n  //   setIsLoading(false);\n  // };\n\n  const loadData = async () => {\n    axios\n      .get(`https://source.unsplash.com/1600x900/?adventures`)\n      .then((data) => {\n        console.log(data);\n      });\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {/* {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          data.adventures.map(({ id, country, title, cost, period }, index) => {\n            return (\n              <div className='lg:w-1/4 md:w-1/3 w-1/2 pb-5'>\n                {photos.imgs ? (\n                  <AdventureCard\n                    key={id}\n                    id={id}\n                    img={photos.imgs[index].urls.regular}\n                    imglow={photos.imgs[index].urls.thumb}\n                    country={country}\n                    title={title}\n                    cost={cost}\n                    period={period}\n                  />\n                ) : null}\n              </div>\n            );\n          })\n        )} */}\n      </div>\n\n      <ShowAll title='Show all adventures' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}