{"ast":null,"code":"import React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media'; // Component\n\nimport AdventureCard from '../presentational/AdventureCard';\nimport ShowAll from '../ShowAll';\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n      imglow\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ADVENTURES);\n  const [card, setCard] = useState(0);\n\n  const renderContent = (data, number) => {\n    var content = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(React.createElement(\"div\", {\n        className: \"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5\"\n      }, React.createElement(AdventureCard, {\n        key: data[i].id,\n        id: data[i].id,\n        img: data[i].img,\n        imglow: data[i].imglow,\n        country: data[i].country,\n        title: data[i].title,\n        cost: data[i].cost,\n        period: data[i].period\n      })));\n    }\n\n    return content;\n  };\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"flex justify-center items-center w-full py-20\"\n    }, React.createElement(PulseLoader, {\n      size: 10,\n      color: '#008489'\n    }));\n  }\n\n  if (error) return `Error! ${error.message}`;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\"\n  }, data ? React.createElement(React.Fragment, null, React.createElement(Media, {\n    queries: {\n      small: '(max-width: 987px)'\n    }\n  }, matches => matches.small ? (setCard(4), renderContent(data.adventures, card)) : null), React.createElement(Media, {\n    queries: {\n      large: '(min-width: 988px) and (max-width: 1299px)'\n    }\n  }, matches => matches.large ? (setCard(4), renderContent(data.adventures, card)) : null), React.createElement(Media, {\n    queries: {\n      xl: '(min-width: 1300px) and (max-width: 1529px)'\n    }\n  }, matches => matches.xl ? (setCard(5), renderContent(data.adventures, card)) : null), React.createElement(Media, {\n    queries: {\n      xl: '(min-width: 1530px)'\n    }\n  }, matches => matches.xl ? (setCard(6), renderContent(data.adventures, card)) : null)) : null), React.createElement(ShowAll, {\n    title: \"Show all adventures\"\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.js"],"names":["React","useState","useQuery","gql","PulseLoader","Media","AdventureCard","ShowAll","GET_ADVENTURES","loading","error","data","card","setCard","renderContent","number","content","i","push","id","img","imglow","country","title","cost","period","message","small","matches","adventures","large","xl"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Component\nimport AdventureCard from '../presentational/AdventureCard';\nimport ShowAll from '../ShowAll';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n      imglow\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_ADVENTURES);\n  const [card, setCard] = useState(0);\n\n  const renderContent = (data, number) => {\n    var content = [];\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n          <AdventureCard\n            key={data[i].id}\n            id={data[i].id}\n            img={data[i].img}\n            imglow={data[i].imglow}\n            country={data[i].country}\n            title={data[i].title}\n            cost={data[i].cost}\n            period={data[i].period}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (loading) {\n    return (\n      <div className='flex justify-center items-center w-full py-20'>\n        <PulseLoader size={10} color={'#008489'} />\n      </div>\n    );\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {data ? (\n          <>\n            <Media queries={{ small: '(max-width: 987px)' }}>\n              {(matches) =>\n                matches.small\n                  ? (setCard(4), renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                large: '(min-width: 988px) and (max-width: 1299px)'\n              }}>\n              {(matches) =>\n                matches.large\n                  ? (setCard(4), renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                xl: '(min-width: 1300px) and (max-width: 1529px)'\n              }}>\n              {(matches) =>\n                matches.xl\n                  ? (setCard(5), renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                xl: '(min-width: 1530px)'\n              }}>\n              {(matches) =>\n                matches.xl\n                  ? (setCard(6), renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n          </>\n        ) : null}\n      </div>\n\n      <ShowAll title='Show all adventures' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}