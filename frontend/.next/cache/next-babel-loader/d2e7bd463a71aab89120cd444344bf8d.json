{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/THundredPlus.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    stays {\\n      id\\n      host_is_superhost\\n      size\\n      country\\n      name\\n      price\\n      reviews_per_month\\n      number_of_reviews\\n      picture_url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader'; // Component\n\nimport { THundredPlusCard } from '../functions/THundredPlusCard';\nimport { ShowAll } from '../ShowAll'; // Wrapper\n\nimport { ExploreSection } from '../wrapper/ExploreSection';\nvar staydata = gql(_templateObject());\nexport var THundredPlus = function THundredPlus() {\n  var _useQuery = useQuery(staydata),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (error) return \"Error! \".concat(error.message);\n  return __jsx(React.Fragment, null, __jsx(ExploreSection, {\n    title: \"300+ places to stay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex flex-wrap items-start justify-start w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })) : data && data.stays.map(function (_ref, index) {\n    var host_is_superhost = _ref.host_is_superhost,\n        size = _ref.size,\n        country = _ref.country,\n        name = _ref.name,\n        price = _ref.price,\n        reviews_per_month = _ref.reviews_per_month,\n        number_of_reviews = _ref.number_of_reviews,\n        picture_url = _ref.picture_url;\n    return __jsx(\"div\", {\n      className: \"lg:w-1/3 xl:w-1/4 pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(THundredPlusCard, {\n      key: index,\n      img: picture_url,\n      host_is_superhost: host_is_superhost,\n      size: size,\n      country: country,\n      name: name,\n      price: price,\n      reviews_per_month: reviews_per_month,\n      number_of_reviews: number_of_reviews,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  })), __jsx(ShowAll, {\n    title: \"Show(2000+)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/THundredPlus.tsx"],"names":["React","useQuery","gql","PulseLoader","THundredPlusCard","ShowAll","ExploreSection","staydata","THundredPlus","loading","error","data","message","stays","map","index","host_is_superhost","size","country","name","price","reviews_per_month","number_of_reviews","picture_url"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,IAAMC,QAAQ,GAAGL,GAAH,mBAAd;AAgCA,OAAO,IAAMM,YAAiB,GAAG,SAApBA,YAAoB,GAAM;AAAA,kBACJP,QAAQ,CAAWM,QAAX,CADJ;AAAA,MAC7BE,OAD6B,aAC7BA,OAD6B;AAAA,MACpBC,KADoB,aACpBA,KADoB;AAAA,MACbC,IADa,aACbA,IADa;;AAGrC,MAAID,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB;AAEX,SACE,4BACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,GACN;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAKNE,IAAI,IACJA,IAAI,CAACE,KAAL,CAAWC,GAAX,CACE,gBAWEC,KAXF,EAYK;AAAA,QAVDC,iBAUC,QAVDA,iBAUC;AAAA,QATDC,IASC,QATDA,IASC;AAAA,QARDC,OAQC,QARDA,OAQC;AAAA,QAPDC,IAOC,QAPDA,IAOC;AAAA,QANDC,KAMC,QANDA,KAMC;AAAA,QALDC,iBAKC,QALDA,iBAKC;AAAA,QAJDC,iBAIC,QAJDA,iBAIC;AAAA,QAHDC,WAGC,QAHDA,WAGC;AACH,WACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,GAAG,EAAER,KADP;AAEE,MAAA,GAAG,EAAEQ,WAFP;AAGE,MAAA,iBAAiB,EAAEP,iBAHrB;AAIE,MAAA,IAAI,EAAEC,IAJR;AAKE,MAAA,OAAO,EAAEC,OALX;AAME,MAAA,IAAI,EAAEC,IANR;AAOE,MAAA,KAAK,EAAEC,KAPT;AAQE,MAAA,iBAAiB,EAAEC,iBARrB;AASE,MAAA,iBAAiB,EAAEC,iBATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAeD,GA7BH,CAPJ,CADF,EAyCE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,CADF,CADF;AA+CD,CApDM","sourcesContent":["import * as React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\n\n// Component\nimport { THundredPlusCard } from '../functions/THundredPlusCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { ExploreSection } from '../wrapper/ExploreSection';\n\nconst staydata = gql`\n  query {\n    stays {\n      id\n      host_is_superhost\n      size\n      country\n      name\n      price\n      reviews_per_month\n      number_of_reviews\n      picture_url\n    }\n  }\n`;\n\ninterface StayData {\n  stays: Stay[];\n}\n\ninterface Stay {\n  id: string;\n  host_is_superhost: string;\n  size: string;\n  country: string;\n  name: string;\n  price: number;\n  reviews_per_month: number;\n  number_of_reviews: number;\n  picture_url: string;\n}\n\nexport const THundredPlus: any = () => {\n  const { loading, error, data } = useQuery<StayData>(staydata);\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <ExploreSection title='300+ places to stay'>\n        <div className='flex flex-wrap items-start justify-start w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data &&\n            data.stays.map(\n              (\n                {\n                  host_is_superhost,\n                  size,\n                  country,\n                  name,\n                  price,\n                  reviews_per_month,\n                  number_of_reviews,\n                  picture_url\n                },\n                index\n              ) => {\n                return (\n                  <div className='lg:w-1/3 xl:w-1/4 pb-5'>\n                    <THundredPlusCard\n                      key={index}\n                      img={picture_url}\n                      host_is_superhost={host_is_superhost}\n                      size={size}\n                      country={country}\n                      name={name}\n                      price={price}\n                      reviews_per_month={reviews_per_month}\n                      number_of_reviews={number_of_reviews}\n                    />\n                  </div>\n                );\n              }\n            )\n          )}\n        </div>\n        <ShowAll title='Show(2000+)' />\n      </ExploreSection>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}