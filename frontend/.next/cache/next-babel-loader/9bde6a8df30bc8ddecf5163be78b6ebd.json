{"ast":null,"code":"import React, { useState, useEffect, useCallback } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\nimport Media from 'react-media'; // Component\n\nimport AdventureCard from '../presentational/AdventureCard';\nimport ShowAll from '../ShowAll';\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n      imglow\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ADVENTURES);\n  const [isLoading, setIsLoading] = useState(true);\n  const [card, setCard] = useState(0);\n\n  function useForceUpdate() {\n    const [, setTick] = useState(0);\n    const update = useCallback(() => {\n      setTick(tick => tick + 1);\n    }, []);\n    return update;\n  }\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios.get(`https://api.unsplash.com/photos/random?h=140&query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`).then(data => {\n      setPhotos({\n        imgs: data.data\n      });\n    });\n    setIsLoading(false);\n  };\n\n  const renderContent = (data, number) => {\n    var content = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(React.createElement(\"div\", {\n        className: \"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5\"\n      }, React.createElement(AdventureCard, {\n        key: data[i].id,\n        id: data[i].id,\n        img: data[i].img,\n        imglow: data[i].imglow,\n        country: data[i].country,\n        title: data[i].title,\n        cost: data[i].cost,\n        period: data[i].period\n      })));\n    }\n\n    console.log(content.length);\n    return content;\n  };\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"flex justify-center items-center w-full py-20\"\n    }, React.createElement(PulseLoader, {\n      size: 10,\n      color: '#008489'\n    }));\n  }\n\n  if (error) return `Error! ${error.message}`;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\"\n  }, data ? React.createElement(React.Fragment, null, React.createElement(Media, {\n    queries: {\n      small: '(max-width: 747px)'\n    }\n  }, matches => matches.small ? (setCard(4), forceUpdate, renderContent(data.adventures, card)) : null), React.createElement(Media, {\n    queries: {\n      medium: '(min-width: 748px) and (max-width: 987px)'\n    }\n  }, matches => matches.medium ? (setCard(3), forceUpdate, renderContent(data.adventures, card)) : null), React.createElement(Media, {\n    queries: {\n      large: '(min-width: 988px) and (max-width: 1299px)'\n    }\n  }, matches => matches.large ? (setCard(4), forceUpdate, renderContent(data.adventures, card)) : null), React.createElement(Media, {\n    queries: {\n      xl: '(min-width: 1300px) and (max-width: 1529px)'\n    }\n  }, matches => matches.xl ? (setCard(5), forceUpdate, renderContent(data.adventures, card)) : null), React.createElement(Media, {\n    queries: {\n      xl: '(min-width: 1530px)'\n    }\n  }, matches => matches.xl ? (setCard(6), renderContent(data.adventures, card)) : null)) : null), React.createElement(ShowAll, {\n    title: \"Show all adventures\"\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.js"],"names":["React","useState","useEffect","useCallback","useQuery","gql","PulseLoader","axios","Media","AdventureCard","ShowAll","GET_ADVENTURES","loading","error","data","isLoading","setIsLoading","card","setCard","useForceUpdate","setTick","update","tick","forceUpdate","loadData","get","info","query","count","orientation","client_id","then","setPhotos","imgs","renderContent","number","content","i","push","id","img","imglow","country","title","cost","period","console","log","length","message","small","matches","adventures","medium","large","xl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\nimport Media from 'react-media';\n\n// Component\nimport AdventureCard from '../presentational/AdventureCard';\nimport ShowAll from '../ShowAll';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n      imglow\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_ADVENTURES);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [card, setCard] = useState(0);\n\n  function useForceUpdate() {\n    const [, setTick] = useState(0);\n    const update = useCallback(() => {\n      setTick((tick) => tick + 1);\n    }, []);\n    return update;\n  }\n\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios\n      .get(\n        `https://api.unsplash.com/photos/random?h=140&query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`\n      )\n      .then((data) => {\n        setPhotos({ imgs: data.data });\n      });\n    setIsLoading(false);\n  };\n\n  const renderContent = (data, number) => {\n    var content = [];\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n          <AdventureCard\n            key={data[i].id}\n            id={data[i].id}\n            img={data[i].img}\n            imglow={data[i].imglow}\n            country={data[i].country}\n            title={data[i].title}\n            cost={data[i].cost}\n            period={data[i].period}\n          />\n        </div>\n      );\n    }\n    console.log(content.length);\n    return content;\n  };\n\n  if (loading) {\n    return (\n      <div className='flex justify-center items-center w-full py-20'>\n        <PulseLoader size={10} color={'#008489'} />\n      </div>\n    );\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {data ? (\n          <>\n            <Media queries={{ small: '(max-width: 747px)' }}>\n              {(matches) =>\n                matches.small\n                  ? (setCard(4),\n                    forceUpdate,\n                    renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                medium: '(min-width: 748px) and (max-width: 987px)'\n              }}>\n              {(matches) =>\n                matches.medium\n                  ? (setCard(3),\n                    forceUpdate,\n                    renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                large: '(min-width: 988px) and (max-width: 1299px)'\n              }}>\n              {(matches) =>\n                matches.large\n                  ? (setCard(4),\n                    forceUpdate,\n                    renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                xl: '(min-width: 1300px) and (max-width: 1529px)'\n              }}>\n              {(matches) =>\n                matches.xl\n                  ? (setCard(5),\n                    forceUpdate,\n                    renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                xl: '(min-width: 1530px)'\n              }}>\n              {(matches) =>\n                matches.xl\n                  ? (setCard(6), renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n          </>\n        ) : null}\n\n        {/* {data.adventures.map(({ id, country, title, cost, period }, index) => {\n          return (\n           \n              {photos.imgs ? (\n                <AdventureCard\n                  key={id}\n                  id={id}\n                  img={photos.imgs[index].urls.full}\n                  imglow={photos.imgs[index].urls.thumb}\n                  country={country}\n                  title={title}\n                  cost={cost}\n                  period={period}\n                />\n              ) : null}\n            </div>\n          );\n        })} */}\n      </div>\n\n      <ShowAll title='Show all adventures' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}