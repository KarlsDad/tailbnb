{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/TopRated.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    experiences {\\n      id\\n      title\\n      cost\\n      ratings\\n      reviews\\n      ratings\\n      location\\n      imglow\\n      img\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media'; // Components\n\nimport { TopRatedCard } from '../presentational/TopRatedCard';\nimport ShowAll from '../ShowAll';\nvar GET_EXPERIENCES = gql(_templateObject());\nexport default (function () {\n  var _useQuery = useQuery(GET_EXPERIENCES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState(0),\n      card = _useState[0],\n      setCard = _useState[1];\n\n  var renderContent = function renderContent(data, number) {\n    var content = [];\n\n    for (var i = 0; i < number; i++) {\n      content.push(__jsx(\"div\", {\n        className: \"w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 2xl:w-1/6 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, __jsx(TopRatedCard, {\n        key: data[i].id,\n        id: data[i].id,\n        img: data[i].img,\n        imglow: data[i].imglow,\n        country: data[i].country,\n        title: data[i].title,\n        cost: data[i].cost,\n        period: data[i].period,\n        ratings: data[i].ratings,\n        reviews: data[i].reviews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  };\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: \"flex justify-center items-center w-full py-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(PulseLoader, {\n      size: 10,\n      color: '#008489',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n  if (error) return \"Error! \".concat(error.message);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, data ? __jsx(React.Fragment, null, __jsx(Media, {\n    queries: {\n      xs: '(min-width: 0px) and (max-width: 739px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xs ? (setCard(4), renderContent(data.experiences, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      small: '(min-width: 740px) and (max-width: 987px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, function (matches) {\n    return matches.small ? (setCard(3), renderContent(data.experiences, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      large: '(min-width: 988px) and (max-width: 1299px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, function (matches) {\n    return matches.large ? (setCard(4), renderContent(data.experiences, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      xl: '(min-width: 1300px) and (max-width: 1529px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xl ? (setCard(5), renderContent(data.experiences, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      xl: '(min-width: 1530px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xl ? (setCard(6), renderContent(data.experiences, card)) : null;\n  })) : null), __jsx(ShowAll, {\n    title: \"Show all experiences\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/TopRated.js"],"names":["React","useState","useQuery","gql","PulseLoader","Media","TopRatedCard","ShowAll","GET_EXPERIENCES","loading","error","data","card","setCard","renderContent","number","content","i","push","id","img","imglow","country","title","cost","period","ratings","reviews","message","xs","matches","experiences","small","large","xl"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,IAAMC,eAAe,GAAGL,GAAH,mBAArB;AAgBA,gBAAe,YAAM;AAAA,kBACcD,QAAQ,CAACM,eAAD,CADtB;AAAA,MACXC,OADW,aACXA,OADW;AAAA,MACFC,KADE,aACFA,KADE;AAAA,MACKC,IADL,aACKA,IADL;;AAAA,kBAEKV,QAAQ,CAAC,CAAD,CAFb;AAAA,MAEZW,IAFY;AAAA,MAENC,OAFM;;AAInB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACH,IAAD,EAAOI,MAAP,EAAkB;AACtC,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC/BD,MAAAA,OAAO,CAACE,IAAR,CACE;AAAK,QAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AACE,QAAA,GAAG,EAAEP,IAAI,CAACM,CAAD,CAAJ,CAAQE,EADf;AAEE,QAAA,EAAE,EAAER,IAAI,CAACM,CAAD,CAAJ,CAAQE,EAFd;AAGE,QAAA,GAAG,EAAER,IAAI,CAACM,CAAD,CAAJ,CAAQG,GAHf;AAIE,QAAA,MAAM,EAAET,IAAI,CAACM,CAAD,CAAJ,CAAQI,MAJlB;AAKE,QAAA,OAAO,EAAEV,IAAI,CAACM,CAAD,CAAJ,CAAQK,OALnB;AAME,QAAA,KAAK,EAAEX,IAAI,CAACM,CAAD,CAAJ,CAAQM,KANjB;AAOE,QAAA,IAAI,EAAEZ,IAAI,CAACM,CAAD,CAAJ,CAAQO,IAPhB;AAQE,QAAA,MAAM,EAAEb,IAAI,CAACM,CAAD,CAAJ,CAAQQ,MARlB;AASE,QAAA,OAAO,EAAEd,IAAI,CAACM,CAAD,CAAJ,CAAQS,OATnB;AAUE,QAAA,OAAO,EAAEf,IAAI,CAACM,CAAD,CAAJ,CAAQU,OAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAgBD;;AACD,WAAOX,OAAP;AACD,GArBD;;AAuBA,MAAIP,OAAJ,EAAa;AACX,WACE;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAuB,MAAA,KAAK,EAAE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,MAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACkB,OAAvB;AAEX,SACE,4BACE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,IAAI,GACH,4BACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE;AAAEkB,MAAAA,EAAE,EAAE;AAAN,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACC,OAAD;AAAA,WACCA,OAAO,CAACD,EAAR,IACKhB,OAAO,CAAC,CAAD,CAAP,EAAYC,aAAa,CAACH,IAAI,CAACoB,WAAN,EAAmBnB,IAAnB,CAD9B,IAEI,IAHL;AAAA,GADH,CADF,EAQE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AAAEoB,MAAAA,KAAK,EAAE;AAAT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,UAACF,OAAD;AAAA,WACCA,OAAO,CAACE,KAAR,IACKnB,OAAO,CAAC,CAAD,CAAP,EAAYC,aAAa,CAACH,IAAI,CAACoB,WAAN,EAAmBnB,IAAnB,CAD9B,IAEI,IAHL;AAAA,GAFH,CARF,EAgBE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPqB,MAAAA,KAAK,EAAE;AADA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAACH,OAAD;AAAA,WACCA,OAAO,CAACG,KAAR,IACKpB,OAAO,CAAC,CAAD,CAAP,EAAYC,aAAa,CAACH,IAAI,CAACoB,WAAN,EAAmBnB,IAAnB,CAD9B,IAEI,IAHL;AAAA,GAJH,CAhBF,EA0BE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPsB,MAAAA,EAAE,EAAE;AADG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAACJ,OAAD;AAAA,WACCA,OAAO,CAACI,EAAR,IACKrB,OAAO,CAAC,CAAD,CAAP,EAAYC,aAAa,CAACH,IAAI,CAACoB,WAAN,EAAmBnB,IAAnB,CAD9B,IAEI,IAHL;AAAA,GAJH,CA1BF,EAoCE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPsB,MAAAA,EAAE,EAAE;AADG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAACJ,OAAD;AAAA,WACCA,OAAO,CAACI,EAAR,IACKrB,OAAO,CAAC,CAAD,CAAP,EAAYC,aAAa,CAACH,IAAI,CAACoB,WAAN,EAAmBnB,IAAnB,CAD9B,IAEI,IAHL;AAAA,GAJH,CApCF,CADG,GAgDD,IAjDN,CADF,EAoDE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApDF,CADF;AAwDD,CA7FD","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Components\nimport { TopRatedCard } from '../presentational/TopRatedCard';\nimport ShowAll from '../ShowAll';\n\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      ratings\n      location\n      imglow\n      img\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_EXPERIENCES);\n  const [card, setCard] = useState(0);\n\n  const renderContent = (data, number) => {\n    var content = [];\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 2xl:w-1/6 pb-5'>\n          <TopRatedCard\n            key={data[i].id}\n            id={data[i].id}\n            img={data[i].img}\n            imglow={data[i].imglow}\n            country={data[i].country}\n            title={data[i].title}\n            cost={data[i].cost}\n            period={data[i].period}\n            ratings={data[i].ratings}\n            reviews={data[i].reviews}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (loading) {\n    return (\n      <div className='flex justify-center items-center w-full py-20'>\n        <PulseLoader size={10} color={'#008489'} />\n      </div>\n    );\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {data ? (\n          <>\n            <Media queries={{ xs: '(min-width: 0px) and (max-width: 739px)' }}>\n              {(matches) =>\n                matches.xs\n                  ? (setCard(4), renderContent(data.experiences, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{ small: '(min-width: 740px) and (max-width: 987px)' }}>\n              {(matches) =>\n                matches.small\n                  ? (setCard(3), renderContent(data.experiences, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                large: '(min-width: 988px) and (max-width: 1299px)'\n              }}>\n              {(matches) =>\n                matches.large\n                  ? (setCard(4), renderContent(data.experiences, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                xl: '(min-width: 1300px) and (max-width: 1529px)'\n              }}>\n              {(matches) =>\n                matches.xl\n                  ? (setCard(5), renderContent(data.experiences, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                xl: '(min-width: 1530px)'\n              }}>\n              {(matches) =>\n                matches.xl\n                  ? (setCard(6), renderContent(data.experiences, card))\n                  : null\n              }\n            </Media>\n          </>\n        ) : null}\n      </div>\n      <ShowAll title='Show all experiences' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}