{"ast":null,"code":"import React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios'; // Components\n\nimport TopRatedCard from '../presentational/TopRatedCard';\nimport ShowAll from '../ShowAll';\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      ratings\n      location\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_EXPERIENCES);\n  const [card, setCard] = useState(0);\n\n  const renderContent = (data, number) => {\n    var content = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(React.createElement(\"div\", {\n        className: \"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5\"\n      }, React.createElement(AdventureCard, {\n        key: data[i].id,\n        id: data[i].id,\n        img: data[i].img,\n        imglow: data[i].imglow,\n        country: data[i].country,\n        title: data[i].title,\n        cost: data[i].cost,\n        period: data[i].period\n      })));\n    }\n\n    return content;\n  };\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"flex justify-center items-center w-full py-20\"\n    }, React.createElement(PulseLoader, {\n      size: 10,\n      color: '#008489'\n    }));\n  }\n\n  if (error) return `Error! ${error.message}`;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\"\n  }, data.experiences.map(({\n    id,\n    title,\n    cost,\n    reviews,\n    ratings,\n    location\n  }, index) => {\n    return React.createElement(\"div\", {\n      className: \"md:w-1/4 sm:w-1/3 w-1/2 pb-5\"\n    }, photos.imgs ? React.createElement(TopRatedCard, {\n      key: id,\n      id: id,\n      img: photos.imgs[index].urls.full,\n      imglow: photos.imgs[index].urls.thumb,\n      title: title,\n      cost: cost,\n      ratings: ratings,\n      reviews: reviews,\n      location: location\n    }) : null);\n  })), React.createElement(ShowAll, {\n    title: \"Show all experiences\"\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/TopRated.js"],"names":["React","useState","useQuery","gql","PulseLoader","axios","TopRatedCard","ShowAll","GET_EXPERIENCES","loading","error","data","card","setCard","renderContent","number","content","i","push","id","img","imglow","country","title","cost","period","message","experiences","map","reviews","ratings","location","index","photos","imgs","urls","full","thumb"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\n\n// Components\nimport TopRatedCard from '../presentational/TopRatedCard';\nimport ShowAll from '../ShowAll';\n\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      ratings\n      location\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_EXPERIENCES);\n  const [card, setCard] = useState(0);\n\n  const renderContent = (data, number) => {\n    var content = [];\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n          <AdventureCard\n            key={data[i].id}\n            id={data[i].id}\n            img={data[i].img}\n            imglow={data[i].imglow}\n            country={data[i].country}\n            title={data[i].title}\n            cost={data[i].cost}\n            period={data[i].period}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (loading) {\n    return (\n      <div className='flex justify-center items-center w-full py-20'>\n        <PulseLoader size={10} color={'#008489'} />\n      </div>\n    );\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {data.experiences.map(\n          ({ id, title, cost, reviews, ratings, location }, index) => {\n            return (\n              <div className='md:w-1/4 sm:w-1/3 w-1/2 pb-5'>\n                {photos.imgs ? (\n                  <TopRatedCard\n                    key={id}\n                    id={id}\n                    img={photos.imgs[index].urls.full}\n                    imglow={photos.imgs[index].urls.thumb}\n                    title={title}\n                    cost={cost}\n                    ratings={ratings}\n                    reviews={reviews}\n                    location={location}\n                  />\n                ) : null}\n              </div>\n            );\n          }\n        )}\n      </div>\n      <ShowAll title='Show all experiences' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}