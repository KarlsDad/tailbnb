{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Today.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react'; // import { useState } from 'react';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport withSizes from 'react-sizes'; // Components\n// import { LocationExperienceCard } from '../functions/LocationExperienceCard';\n\nimport { ShowAll } from '../ShowAll'; // Wrapper\n\nimport { Section } from '../wrapper/Section';\nconst GET_LOCATION_EXPERIENCES = gql`\n  query LocationExperiences($available: String, $location: String) {\n    experiences(\n      where: { available: $available, location: $location }\n      first: 6\n    ) {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n      available\n      category\n    }\n  }\n`;\n\nconst mapSizesToProps = ({\n  width\n}) => ({\n  isMobile: width < 480\n});\n\nconst Today = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_LOCATION_EXPERIENCES, {\n    variables: {\n      available: 'Today',\n      location: 'Vancouver'\n    }\n  });\n  if (error) return `Error! ${error.message}`;\n  return __jsx(React.Fragment, null, __jsx(Section, {\n    title: \"Today in Vancouver\",\n    phrase: \"Book activities led by local hosts on your next trip.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })) : data && __jsx(React.Fragment, null, window.innerWidth > 800 ? console.log('big') : console.log('small'))), __jsx(ShowAll, {\n    title: \"Show all experiences\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n};\n\nexport default withSizes(mapSizesToProps)(Today);","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Today.tsx"],"names":["React","useQuery","gql","PulseLoader","withSizes","ShowAll","Section","GET_LOCATION_EXPERIENCES","mapSizesToProps","width","isMobile","Today","loading","error","data","variables","available","location","message","window","innerWidth","console","log"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,wBAAwB,GAAGL,GAAI;;;;;;;;;;;;;;;;;CAArC;;AAmBA,MAAMM,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAgB;AACtCC,EAAAA,QAAQ,EAAED,KAAK,GAAG;AADoB,CAAhB,CAAxB;;AAkBA,MAAME,KAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CACvCM,wBADuC,EAEvC;AACEQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE,OADF;AAETC,MAAAA,QAAQ,EAAE;AAFD;AADb,GAFuC,CAAzC;AAUA,MAAIJ,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACK,OAAQ,EAA/B;AAEX,SACE,4BACE,MAAC,OAAD;AACE,IAAA,KAAK,EAAC,oBADR;AAEE,IAAA,MAAM,EAAC,uDAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,GACN;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAKNE,IAAI,IACF,4BACGK,MAAM,CAACC,UAAP,GAAoB,GAApB,GACGC,OAAO,CAACC,GAAR,CAAY,KAAZ,CADH,GAEGD,OAAO,CAACC,GAAR,CAAY,OAAZ,CAHN,CAPN,CAHF,EAoCE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CADF,CADF;AA0CD,CAvDD;;AAyDA,eAAelB,SAAS,CAACI,eAAD,CAAT,CAA2BG,KAA3B,CAAf","sourcesContent":["import * as React from 'react';\n// import { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport withSizes from 'react-sizes';\n\n// Components\n// import { LocationExperienceCard } from '../functions/LocationExperienceCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_LOCATION_EXPERIENCES = gql`\n  query LocationExperiences($available: String, $location: String) {\n    experiences(\n      where: { available: $available, location: $location }\n      first: 6\n    ) {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n      available\n      category\n    }\n  }\n`;\n\nconst mapSizesToProps = ({ width }) => ({\n  isMobile: width < 480\n});\n\ninterface Experience {\n  id: string;\n  title: string;\n  cost: number;\n  ratings: number;\n  reviews: number;\n  category: string;\n  img: string;\n}\n\ninterface ExperienceData {\n  experiences: Experience[];\n}\n\nconst Today: any = () => {\n  const { loading, error, data } = useQuery<ExperienceData>(\n    GET_LOCATION_EXPERIENCES,\n    {\n      variables: {\n        available: 'Today',\n        location: 'Vancouver'\n      }\n    }\n  );\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section\n        title='Today in Vancouver'\n        phrase='Book activities led by local hosts on your next trip.'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                {window.innerWidth > 800\n                  ? console.log('big')\n                  : console.log('small')}\n                {/* {data.experiences.map((experience, index) => {\n                  if (index == 4) {\n                  }\n                  return (\n                    <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5'>\n                      <LocationExperienceCard\n                        key={index}\n                        id={experience.id}\n                        img={experience.img}\n                        title={experience.title}\n                        cost={experience.cost}\n                        ratings={experience.ratings}\n                        reviews={experience.reviews}\n                        category={experience.category}\n                      />\n                    </div>\n                  );\n                })} */}\n              </>\n            )\n          )}\n        </div>\n        <ShowAll title='Show all experiences' />\n      </Section>\n    </>\n  );\n};\n\nexport default withSizes(mapSizesToProps)(Today);\n"]},"metadata":{},"sourceType":"module"}