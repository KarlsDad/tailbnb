{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    adventures {\\n      id\\n      title\\n      period\\n      cost\\n      country\\n      img\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost'; // import PulseLoader from 'react-spinners/PulseLoader';\n// import Media from 'react-media';\n// Component\n// import { AdventureCard } from '../presentational/AdventureCard';\n// import { ShowAll } from '../ShowAll';\n\nvar GET_ADVENTURES = gql(_templateObject());\nexport var Adventures = function Adventures() {\n  var _useQuery = useQuery(GET_ADVENTURES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState(0),\n      card = _useState[0],\n      setCard = _useState[1]; //   const renderContent = (data: AdventureData, number: number) => {\n  //     var content = [];\n  //     data.adventures.map(adventure, index => {\n  //       content.push(\n  //         <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n  //           <AdventureCard\n  //             key={index}\n  //             id={adventure.id}\n  //             img={data?.adventures[i].img}\n  //             country={data?.adventures[i].country}\n  //             title={data?.adventures[i].title}\n  //             cost={data?.adventures[i].cost}\n  //             period={data?.adventures[i].period}\n  //           />\n  //         </div>\n  //       );\n  //     })\n  //     }\n  //     return content;\n  //   };\n  //   if (error) return `Error! ${error.message}`;\n\n\n  if (!loading) {\n    console.log(data === null || data === void 0 ? void 0 : data.adventures[0]);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(PulseLoader, {\n    size: 10,\n    color: '#008489',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })) : data && __jsx(React.Fragment, null, __jsx(Media, {\n    queries: {\n      small: '(min-width: 0px) and (max-width: 640px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, function (matches) {\n    return matches.small ? (setCard(4), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      large: '(min-width: 641px) and (max-width: 767px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, function (matches) {\n    return matches.large ? (setCard(3), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      xl: '(min-width: 768px) and (max-width: 1023px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, function (matches) {\n    return matches.xl ? (setCard(5), renderContent(data, card)) : null;\n  }), __jsx(Media, {\n    queries: {\n      twoxl: '(min-width: 1024px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, function (matches) {\n    return matches.twoxl ? (setCard(6), renderContent(data, card)) : null;\n  }))), __jsx(ShowAll, {\n    title: \"Show all adventures\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.tsx"],"names":["React","useState","useQuery","gql","GET_ADVENTURES","Adventures","loading","error","data","card","setCard","console","log","adventures","small","matches","renderContent","large","xl","twoxl"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB,C,CACA;AACA;AAEA;AACA;AACA;;AAEA,IAAMC,cAAc,GAAGD,GAAH,mBAApB;AA0BA,OAAO,IAAME,UAAe,GAAG,SAAlBA,UAAkB,GAAM;AAAA,kBACFH,QAAQ,CAAgBE,cAAhB,CADN;AAAA,MAC3BE,OAD2B,aAC3BA,OAD2B;AAAA,MAClBC,KADkB,aAClBA,KADkB;AAAA,MACXC,IADW,aACXA,IADW;;AAAA,kBAEXP,QAAQ,CAAS,CAAT,CAFG;AAAA,MAE5BQ,IAF4B;AAAA,MAEtBC,OAFsB,iBAInC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,MAAI,CAACJ,OAAL,EAAc;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEK,UAAN,CAAiB,CAAjB,CAAZ;AACD;;AACD,SACE,4BACE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OAAO,GACN;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAKNE,IAAI,IACF,4BACE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,UAACC,OAAD;AAAA,WACCA,OAAO,CAACD,KAAR,IAAiBJ,OAAO,CAAC,CAAD,CAAP,EAAYM,aAAa,CAACR,IAAD,EAAOC,IAAP,CAA1C,IAA0D,IAD3D;AAAA,GAFH,CADF,EAQE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPQ,MAAAA,KAAK,EAAE;AADA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAACF,OAAD;AAAA,WACCA,OAAO,CAACE,KAAR,IAAiBP,OAAO,CAAC,CAAD,CAAP,EAAYM,aAAa,CAACR,IAAD,EAAOC,IAAP,CAA1C,IAA0D,IAD3D;AAAA,GAJH,CARF,EAgBE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPS,MAAAA,EAAE,EAAE;AADG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAACH,OAAD;AAAA,WACCA,OAAO,CAACG,EAAR,IAAcR,OAAO,CAAC,CAAD,CAAP,EAAYM,aAAa,CAACR,IAAD,EAAOC,IAAP,CAAvC,IAAuD,IADxD;AAAA,GAJH,CAhBF,EAwBE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPU,MAAAA,KAAK,EAAE;AADA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAACJ,OAAD;AAAA,WACCA,OAAO,CAACI,KAAR,IAAiBT,OAAO,CAAC,CAAD,CAAP,EAAYM,aAAa,CAACR,IAAD,EAAOC,IAAP,CAA1C,IAA0D,IAD3D;AAAA,GAJH,CAxBF,CAPN,CADF,EA6CE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CF,CADF;AAiDD,CAhFM","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n// import PulseLoader from 'react-spinners/PulseLoader';\n// import Media from 'react-media';\n\n// Component\n// import { AdventureCard } from '../presentational/AdventureCard';\n// import { ShowAll } from '../ShowAll';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n    }\n  }\n`;\n\ninterface Adventure {\n  id: string;\n  title: string;\n  period: number;\n  cost: number;\n  country: string;\n  img: string;\n}\n\ninterface AdventureData {\n  adventures: Adventure[];\n}\n\nexport const Adventures: any = () => {\n  const { loading, error, data } = useQuery<AdventureData>(GET_ADVENTURES);\n  const [card, setCard] = useState<number>(0);\n\n  //   const renderContent = (data: AdventureData, number: number) => {\n  //     var content = [];\n\n  //     data.adventures.map(adventure, index => {\n  //       content.push(\n  //         <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n  //           <AdventureCard\n  //             key={index}\n  //             id={adventure.id}\n  //             img={data?.adventures[i].img}\n  //             country={data?.adventures[i].country}\n  //             title={data?.adventures[i].title}\n  //             cost={data?.adventures[i].cost}\n  //             period={data?.adventures[i].period}\n  //           />\n  //         </div>\n  //       );\n  //     })\n  //     }\n  //     return content;\n  //   };\n\n  //   if (error) return `Error! ${error.message}`;\n\n  if (!loading) {\n    console.log(data?.adventures[0]);\n  }\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          data && (\n            <>\n              <Media\n                queries={{ small: '(min-width: 0px) and (max-width: 640px)' }}>\n                {(matches) =>\n                  matches.small ? (setCard(4), renderContent(data, card)) : null\n                }\n              </Media>\n\n              <Media\n                queries={{\n                  large: '(min-width: 641px) and (max-width: 767px)'\n                }}>\n                {(matches) =>\n                  matches.large ? (setCard(3), renderContent(data, card)) : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  xl: '(min-width: 768px) and (max-width: 1023px)'\n                }}>\n                {(matches) =>\n                  matches.xl ? (setCard(5), renderContent(data, card)) : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  twoxl: '(min-width: 1024px)'\n                }}>\n                {(matches) =>\n                  matches.twoxl ? (setCard(6), renderContent(data, card)) : null\n                }\n              </Media>\n            </>\n          )\n        )}\n      </div>\n\n      <ShowAll title='Show all adventures' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}