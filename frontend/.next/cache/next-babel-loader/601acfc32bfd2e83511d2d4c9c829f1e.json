{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    adventures {\\n      id\\n      title\\n      period\\n      cost\\n      country\\n      img\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react'; // import { useState } from 'react';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost'; // import PulseLoader from 'react-spinners/PulseLoader';\n// import Media from 'react-media';\n// Component\n// import { AdventureCard } from '../presentational/AdventureCard';\n// import { ShowAll } from '../ShowAll';\n\nvar GET_ADVENTURES = gql(_templateObject());\nexport var Adventures = function Adventures() {\n  var _useQuery = useQuery(GET_ADVENTURES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data; // const [card, setCard] = useState<number>(0);\n  // const renderContent = (data: Adventure[], number: number) => {\n  //   var content = [];\n  //   for (let i = 0; i < number; i++) {\n  //     content.push(\n  //       <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n  //         <AdventureCard\n  //           key={i}\n  //           id={data[i].id}\n  //           img={data[i].img}\n  //           country={data[i].country}\n  //           title={data[i].title}\n  //           cost={data[i].cost}\n  //           period={data[i].period}\n  //         />\n  //       </div>\n  //     );\n  //   }\n  //   return content;\n  // };\n\n\n  if (error) return \"Error! \".concat(error.message);\n\n  if (!loading) {\n    console.log(data === null || data === void 0 ? void 0 : data.adventures[0]);\n  }\n\n  return __jsx(React.Fragment, null);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/Adventures.tsx"],"names":["React","useQuery","gql","GET_ADVENTURES","Adventures","loading","error","data","message","console","log","adventures"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB,C,CACA;AACA;AAEA;AACA;AACA;;AAEA,IAAMC,cAAc,GAAGD,GAAH,mBAApB;AA0BA,OAAO,IAAME,UAAe,GAAG,SAAlBA,UAAkB,GAAM;AAAA,kBACFH,QAAQ,CAAgBE,cAAhB,CADN;AAAA,MAC3BE,OAD2B,aAC3BA,OAD2B;AAAA,MAClBC,KADkB,aAClBA,KADkB;AAAA,MACXC,IADW,aACXA,IADW,EAEnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAID,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB;;AAEX,MAAI,CAACH,OAAL,EAAc;AACZI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEI,UAAN,CAAiB,CAAjB,CAAZ;AACD;;AACD,SACE,2BADF;AAyDD,CAtFM","sourcesContent":["import * as React from 'react';\n// import { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n// import PulseLoader from 'react-spinners/PulseLoader';\n// import Media from 'react-media';\n\n// Component\n// import { AdventureCard } from '../presentational/AdventureCard';\n// import { ShowAll } from '../ShowAll';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n    }\n  }\n`;\n\ninterface Adventure {\n  id: string;\n  title: string;\n  period: number;\n  cost: number;\n  country: string;\n  img: string;\n}\n\ninterface AdventureData {\n  adventures: Adventure[];\n}\n\nexport const Adventures: any = () => {\n  const { loading, error, data } = useQuery<AdventureData>(GET_ADVENTURES);\n  // const [card, setCard] = useState<number>(0);\n\n  // const renderContent = (data: Adventure[], number: number) => {\n  //   var content = [];\n  //   for (let i = 0; i < number; i++) {\n  //     content.push(\n  //       <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/5 xl:w-1/6 pb-5'>\n  //         <AdventureCard\n  //           key={i}\n  //           id={data[i].id}\n  //           img={data[i].img}\n  //           country={data[i].country}\n  //           title={data[i].title}\n  //           cost={data[i].cost}\n  //           period={data[i].period}\n  //         />\n  //       </div>\n  //     );\n  //   }\n  //   return content;\n  // };\n\n  if (error) return `Error! ${error.message}`;\n\n  if (!loading) {\n    console.log(data?.adventures[0]);\n  }\n  return (\n    <>\n      {/* <div className='flex items-start justify-start flex-wrap w-full'>\n         {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          data && (\n            <>\n              <Media\n                queries={{ small: '(min-width: 0px) and (max-width: 640px)' }}>\n                {(matches) =>\n                  matches.small\n                    ? (setCard(4), renderContent(data.adventures, card))\n                    : null\n                }\n              </Media>\n\n              <Media\n                queries={{\n                  large: '(min-width: 641px) and (max-width: 767px)'\n                }}>\n                {(matches) =>\n                  matches.large\n                    ? (setCard(3), renderContent(data.adventures, card))\n                    : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  xl: '(min-width: 768px) and (max-width: 1023px)'\n                }}>\n                {(matches) =>\n                  matches.xl\n                    ? (setCard(5), renderContent(data.adventures, card))\n                    : null\n                }\n              </Media>\n              <Media\n                queries={{\n                  twoxl: '(min-width: 1024px)'\n                }}>\n                {(matches) =>\n                  matches.twoxl\n                    ? (setCard(6), renderContent(data.adventures, card))\n                    : null\n                }\n              </Media>\n            </>\n          )\n        )}\n      </div>\n\n      <ShowAll title='Show all adventures' /> */}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}