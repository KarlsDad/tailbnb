{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios'; // Components\n\nimport TopRatedCard from '../presentational/TopRatedCard';\nimport ShowAll from '../ShowAll';\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      country\n      img\n      imglow\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_EXPERIENCES);\n  const info = {\n    query: 'experience',\n    count: 4,\n    orientation: 'portrait',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios.get(`https://api.unsplash.com/photos/random?query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`).then(data => {\n      setPhotos({\n        imgs: data.data\n      });\n    });\n    setIsLoading(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flex items-start justify-start flex-wrap w-full\"\n  }, data.experiences.map(({\n    id,\n    title,\n    cost,\n    ratings,\n    reviews,\n    country\n  }, index) => {\n    return React.createElement(\"div\", {\n      className: \"md:w-1/4 sm:w-1/3 w-1/2 pb-5\"\n    }, photos.imgs ? React.createElement(TopRatedCard, {\n      key: id,\n      img: photos.imgs[index].urls.regular,\n      imglow: photos.imgs[index].urls.thumb,\n      title: title,\n      cost: cost,\n      ratings: ratings,\n      reviews: reviews,\n      country: country\n    }) : null);\n  })), React.createElement(ShowAll, {\n    title: \"Show all experiences\"\n  }));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/components/containers/TopRated.js"],"names":["React","useState","useEffect","useQuery","gql","PulseLoader","axios","TopRatedCard","ShowAll","GET_EXPERIENCES","loading","error","data","info","query","count","orientation","client_id","loadData","get","then","setPhotos","imgs","setIsLoading","experiences","map","id","title","cost","ratings","reviews","country","index","photos","urls","regular","thumb"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,MAAMC,eAAe,GAAGL,GAAI;;;;;;;;;;;;;CAA5B;AAeA,gBAAe,MAAM;AACnB,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACM,eAAD,CAAzC;AAEA,QAAMI,IAAI,GAAG;AACXC,IAAAA,KAAK,EAAE,YADI;AAEXC,IAAAA,KAAK,EAAE,CAFI;AAGXC,IAAAA,WAAW,EAAE,UAHF;AAIXC,IAAAA,SAAS,EAAE;AAJA,GAAb;AAOAf,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,YAAY;AAC3BZ,IAAAA,KAAK,CACFa,GADH,CAEK,gDAA+CN,IAAI,CAACC,KAAM,UAASD,IAAI,CAACE,KAAM,gBAAeF,IAAI,CAACG,WAAY,cAAaH,IAAI,CAACI,SAAU,EAF/I,EAIGG,IAJH,CAISR,IAAD,IAAU;AACdS,MAAAA,SAAS,CAAC;AAAEC,QAAAA,IAAI,EAAEV,IAAI,CAACA;AAAb,OAAD,CAAT;AACD,KANH;AAOAW,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GATD;;AAWA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGX,IAAI,CAACY,WAAL,CAAiBC,GAAjB,CACC,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,OAA5B;AAAqCC,IAAAA;AAArC,GAAD,EAAiDC,KAAjD,KAA2D;AACzD,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGC,MAAM,CAACX,IAAP,GACC,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEI,EADP;AAEE,MAAA,GAAG,EAAEO,MAAM,CAACX,IAAP,CAAYU,KAAZ,EAAmBE,IAAnB,CAAwBC,OAF/B;AAGE,MAAA,MAAM,EAAEF,MAAM,CAACX,IAAP,CAAYU,KAAZ,EAAmBE,IAAnB,CAAwBE,KAHlC;AAIE,MAAA,KAAK,EAAET,KAJT;AAKE,MAAA,IAAI,EAAEC,IALR;AAME,MAAA,OAAO,EAAEC,OANX;AAOE,MAAA,OAAO,EAAEC,OAPX;AAQE,MAAA,OAAO,EAAEC;AARX,MADD,GAWG,IAZN,CADF;AAgBD,GAlBF,CADH,CADF,EAuBE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC;AAAf,IAvBF,CADF;AA2BD,CApDD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\n\n// Components\nimport TopRatedCard from '../presentational/TopRatedCard';\nimport ShowAll from '../ShowAll';\n\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      country\n      img\n      imglow\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_EXPERIENCES);\n\n  const info = {\n    query: 'experience',\n    count: 4,\n    orientation: 'portrait',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios\n      .get(\n        `https://api.unsplash.com/photos/random?query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`\n      )\n      .then((data) => {\n        setPhotos({ imgs: data.data });\n      });\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {data.experiences.map(\n          ({ id, title, cost, ratings, reviews, country }, index) => {\n            return (\n              <div className='md:w-1/4 sm:w-1/3 w-1/2 pb-5'>\n                {photos.imgs ? (\n                  <TopRatedCard\n                    key={id}\n                    img={photos.imgs[index].urls.regular}\n                    imglow={photos.imgs[index].urls.thumb}\n                    title={title}\n                    cost={cost}\n                    ratings={ratings}\n                    reviews={reviews}\n                    country={country}\n                  />\n                ) : null}\n              </div>\n            );\n          }\n        )}\n      </div>\n      <ShowAll title='Show all experiences' />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}