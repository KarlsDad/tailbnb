{"ast":null,"code":"import { useRouter } from 'next/router';\nimport React from 'react';\nimport ExploreHeader from '../../components/layout/ExploreHeader';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\nconst getData = newid => {\n  const staydata = gql`\n    query {\n      stay(where: { id: newid }) {\n        title\n      }\n    }\n  `;\n};\n\nexport default (() => {\n  const router = useRouter();\n  getData();\n  const {\n    load,\n    error,\n    data\n  } = useQuery(staydata);\n  const newid = router.asPath.split('/')[2];\n  return React.createElement(React.Fragment, null, React.createElement(ExploreHeader, null), React.createElement(\"div\", {\n    className: \"w-screen bg-blue\"\n  }), React.createElement(\"h1\", null, newid));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/pages/rooms/[id].js"],"names":["useRouter","React","ExploreHeader","useQuery","gql","getData","newid","staydata","router","load","error","data","asPath","split"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,QAAQ,GAAGH,GAAI;;;;;;GAArB;AAOD,CARD;;AAUA,gBAAe,MAAM;AACnB,QAAMI,MAAM,GAAGR,SAAS,EAAxB;AACAK,EAAAA,OAAO;AACP,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAwBR,QAAQ,CAACI,QAAD,CAAtC;AACA,QAAMD,KAAK,GAAGE,MAAM,CAACI,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAd;AACA,SACE,0CACE,oBAAC,aAAD,OADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,IAFF,EAGE,gCAAKP,KAAL,CAHF,CADF;AAOD,CAZD","sourcesContent":["import { useRouter } from 'next/router';\nimport React from 'react';\nimport ExploreHeader from '../../components/layout/ExploreHeader';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\nconst getData = (newid) => {\n  const staydata = gql`\n    query {\n      stay(where: { id: newid }) {\n        title\n      }\n    }\n  `;\n};\n\nexport default () => {\n  const router = useRouter();\n  getData();\n  const { load, error, data } = useQuery(staydata);\n  const newid = router.asPath.split('/')[2];\n  return (\n    <>\n      <ExploreHeader />\n      <div className='w-screen bg-blue'></div>\n      <h1>{newid}</h1>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}