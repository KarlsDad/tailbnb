{"ast":null,"code":"import { useRouter } from 'next/router';\nimport React from 'react';\nimport ExploreHeader from '../../components/layout/ExploreHeader';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nconst staydata = gql`\n  query Stay($id: ID!) {\n    stay(where: { id: $id }) {\n      id\n      title\n    }\n  }\n`;\nexport default (() => {\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(staydata, {\n    variables: {\n      id: router.query.id\n    }\n  });\n  if (loading) return 'loading...';\n  if (error) return 'error...';\n  return React.createElement(React.Fragment, null, React.createElement(ExploreHeader, null), React.createElement(\"div\", {\n    className: \"w-screen bg-blue\"\n  }), React.createElement(\"h1\", null, data.stay.title));\n});","map":{"version":3,"sources":["/Users/ken/Desktop/nextbnb/frontend/src/pages/rooms/[id].js"],"names":["useRouter","React","ExploreHeader","useQuery","gql","staydata","router","loading","error","data","variables","id","query","stay","title"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,QAAQ,GAAGD,GAAI;;;;;;;CAArB;AASA,gBAAe,MAAM;AACnB,QAAME,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,QAAD,EAAW;AAClDK,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEL,MAAM,CAACM,KAAP,CAAaD;AADR;AADuC,GAAX,CAAzC;AAMA,MAAIJ,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,UAAP;AACX,SACE,0CACE,oBAAC,aAAD,OADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,IAFF,EAGE,gCAAKC,IAAI,CAACI,IAAL,CAAUC,KAAf,CAHF,CADF;AAOD,CAjBD","sourcesContent":["import { useRouter } from 'next/router';\nimport React from 'react';\nimport ExploreHeader from '../../components/layout/ExploreHeader';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\nconst staydata = gql`\n  query Stay($id: ID!) {\n    stay(where: { id: $id }) {\n      id\n      title\n    }\n  }\n`;\n\nexport default () => {\n  const router = useRouter();\n  const { loading, error, data } = useQuery(staydata, {\n    variables: {\n      id: router.query.id\n    }\n  });\n\n  if (loading) return 'loading...';\n  if (error) return 'error...';\n  return (\n    <>\n      <ExploreHeader />\n      <div className='w-screen bg-blue'></div>\n      <h1>{data.stay.title}</h1>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}