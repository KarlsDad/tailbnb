{"version":3,"file":"static/webpack/static/development/pages/index.js.7f29a35c9534812ace0b.hot-update.js","sources":["webpack:///./src/components/containers/TopRated.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Components\nimport { TopRatedCard } from '../functions/TopRatedCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n    }\n  }\n`;\n\ninterface Experience {\n  id: string;\n  title: string;\n  cost: number;\n  ratings: number;\n  reviews: number;\n  location: string;\n  img: string;\n}\n\ninterface ExperienceData {\n  experiences: Experience[];\n}\n\nexport const TopRated: any = () => {\n  const { loading, error, data } = useQuery<ExperienceData>(GET_EXPERIENCES);\n  const [card, setCard] = useState<number>(0);\n\n  const renderContent = (data: ExperienceData, number: number) => {\n    var content: any[] = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5'>\n          <TopRatedCard\n            key={i}\n            id={data?.experiences[i].id}\n            img={data?.experiences[i].img}\n            title={data?.experiences[i].title}\n            cost={data?.experiences[i].cost}\n            ratings={data?.experiences[i].ratings}\n            reviews={data?.experiences[i].reviews}\n            location={data?.experiences[i].location}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section\n        title='Top-rated experiences'\n        phrase='Book activities led by local hosts on your next trip.'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                <Media\n                  queries={{ xs: '(min-width: 0px) and (max-width: 739px)' }}>\n                  {(matches) =>\n                    matches.xs ? (setCard(4), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    small: '(min-width: 740px) and (max-width: 987px)'\n                  }}>\n                  {(matches) =>\n                    matches.small\n                      ? (setCard(3), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    large: '(min-width: 988px) and (max-width: 1299px)'\n                  }}>\n                  {(matches) =>\n                    matches.large\n                      ? (setCard(3), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    xl: '(min-width: 1300px) and (max-width: 1529px)'\n                  }}>\n                  {(matches) =>\n                    matches.xl ? (setCard(4), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    twoxl: '(min-width: 1530px)'\n                  }}>\n                  {(matches) =>\n                    matches.twoxl\n                      ? (setCard(6), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n              </>\n            )\n          )}\n        </div>\n        <ShowAll title='Show all experiences' />\n      </Section>\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AA4BA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAKA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAOA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAOA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAKA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}