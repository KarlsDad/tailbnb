{"version":3,"file":"static/webpack/static/development/pages/index.js.8c676ce96a764e2979f9.hot-update.js","sources":["webpack:///./src/components/wrapper/SectionOverflow.tsx"],"sourcesContent":["import * as React from 'react';\n\ninterface Prop {\n  title: string;\n  phrase?: string | undefined;\n  children: React.ReactNode;\n}\n\nexport const SectionOverflow: React.FC<Prop> = ({\n  title,\n  phrase,\n  children\n}) => {\n  function renderPhrase(phrase: string | undefined) {\n    if (phrase) {\n      return (\n        <>\n          <h3\n            style={{ fontFamily: 'airbnb-medium' }}\n            className='scrollable text-gray-850 text-2xl pt-3 w-5/6'>\n            {title}\n          </h3>\n          <p\n            style={{ fontFamily: 'airbnb-book' }}\n            className='scrollable text-md mb-5 text-gray-850 pb-3'>\n            {phrase}\n          </p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <h3\n            style={{ fontFamily: 'airbnb-medium' }}\n            className='scrollable text-gray-850 text-2xl py-3 w-5/6'>\n            {title}\n          </h3>\n        </>\n      );\n    }\n  }\n  return (\n    <div className='px-6 lg:px-20 lg:max-w-layout mx-auto py-5 overflow-x-hidden overflow-y-hidden'>\n      {renderPhrase(phrase)}\n      {children}\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAQA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAGA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}