{"version":3,"file":"static/webpack/static/development/pages/index.js.35299f4a8fc71afc17a0.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./node_modules/core-js/library/fn/array/is-array.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///./node_modules/core-js/library/modules/es6.array.is-array.js","webpack:///./src/components/modals/LanguageModal.jsx"],"sourcesContent":["module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require(\"core-js/library/fn/is-iterable\");","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArrayLimit(arr, i) {\n  if (!(_isIterable(Object(arr)) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","require('../../modules/es6.array.is-array');\nmodule.exports = require('../../modules/_core').Array.isArray;\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","import * as React from 'react';\n\nexport const LanguageModal = ({ setLanguageModal }) => {\n  const suggestedLanguages = [\n    {\n      name: 'English',\n      country: 'United States'\n    },\n    {\n      name: 'English',\n      country: 'United Kingdom'\n    },\n    {\n      name: 'Français',\n      country: 'Canada'\n    }\n  ];\n\n  const languages = [\n    {\n      name: 'English',\n      country: 'Canada'\n    },\n    {\n      name: 'Azərbaycan dili',\n      country: 'Azərbaycan'\n    },\n    {\n      name: 'Bahasa Indonesia',\n      country: 'Indonesia'\n    },\n    {\n      name: 'Bosanski',\n      country: 'Bosna i Hercegovina'\n    },\n    {\n      name: 'Català',\n      country: 'Espanya'\n    },\n    {\n      name: 'Čeština',\n      country: 'Česká republika'\n    },\n    {\n      name: 'Crnogorski',\n      country: 'Crna Gora'\n    },\n    {\n      name: 'Dansk',\n      country: 'Danmark'\n    },\n    {\n      name: 'Deutsch',\n      country: 'Deutschland'\n    },\n    {\n      name: 'Deutsch',\n      country: 'Österreich'\n    },\n    {\n      name: 'Deutsch',\n      country: 'Schweiz'\n    },\n    {\n      name: 'Eesti',\n      country: 'Eesti'\n    },\n    {\n      name: 'English',\n      country: 'Australia'\n    },\n    {\n      name: 'English',\n      country: 'Guyana'\n    },\n    {\n      name: 'English',\n      country: 'India'\n    },\n    {\n      name: 'English',\n      country: 'Ireland'\n    },\n    {\n      name: 'English',\n      country: 'New Zealand'\n    },\n    {\n      name: 'English',\n      country: 'Singapore'\n    },\n    {\n      name: 'English',\n      country: 'United Arab Emirates'\n    },\n    {\n      name: 'Español',\n      country: 'Argentina'\n    },\n    {\n      name: 'Español',\n      country: 'Belice'\n    },\n    {\n      name: 'Español',\n      country: 'El Salvador'\n    },\n    {\n      name: 'Español',\n      country: 'España'\n    },\n    {\n      name: 'Español',\n      country: 'Estados Unidos'\n    },\n    {\n      name: 'Español',\n      country: 'Guatemala'\n    },\n    {\n      name: 'Español',\n      country: 'Honduras'\n    },\n    {\n      name: 'Español',\n      country: 'Latinoamérica'\n    }\n  ];\n\n  const [selectedLanguage, setSelectedLanguage] = useState({\n    name: 'English',\n    country: 'Canada'\n  });\n\n  const filteredLanguages = languages.default.filter(\n    (language) => !_.isEqual(language, selectedLanguage)\n  );\n\n  return (\n    <>\n      <div\n        id='darkOverlay'\n        className='fixed w-full h-full top-0 left-0 z-20 overflow-hidden'\n      />\n      <div\n        id='centerAbsolute'\n        className='relative rounded-xl hidden fixed bg-white md:block w-248 pb-8 z-50'>\n        <div className='w-full border-b border-gray-300'>\n          <div className='w-full mx-auto max-w-5xl mt-2 flex justify-center items-center'>\n            <div className='bg-green-850 relative w-full px-4 flex justify-center items-center my-6'>\n              <div className='w-full flex items-center absolute left-0 z-20'>\n                <button onClick={() => setLanguageModal(false)}>\n                  <div className='inline-block z-10 hover:bg-gray-200 bg-white rounded-full p-2'>\n                    <svg\n                      className='w-4 h-4'\n                      xmlns='http://www.w3.org/2000/svg'\n                      viewBox='0 0 47.971 47.971'>\n                      <g>\n                        <path\n                          d='M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\n\t\tc-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\n\t\tC1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\n\t\ts1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z'\n                        />\n                      </g>\n                    </svg>\n                  </div>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='w-full mx-auto max-w-5xl overflow-y-scroll'>\n          <div\n            style={{ fontFamily: 'airbnb-medium' }}\n            className='w-full text-2xl py-6 text-gray-750'>\n            Suggested languages and regions\n          </div>\n          <div className='w-full flex flex-wrap'>\n            {suggestedLanguages.map((language) => {\n              return (\n                <div className='w-1/5 flex mb-4'>\n                  <button className='w-90p hover:bg-gray-250  rounded-lg flex justify-center'>\n                    <div className='w-85p py-1'>\n                      <div className='flex'>\n                        <p\n                          style={{ fontFamily: 'airbnb-book' }}\n                          className='text-sm'>\n                          {language.name}\n                        </p>\n                      </div>\n                      <div className='flex'>\n                        <p\n                          style={{ fontFamily: 'airbnb-book' }}\n                          className='text-sm text-gray-650'>\n                          {language.country}\n                        </p>\n                      </div>\n                    </div>\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n          <div\n            style={{ fontFamily: 'airbnb-medium' }}\n            className='w-full text-2xl py-6 text-gray-750'>\n            Choose a language and region\n          </div>\n          <div className='w-full flex flex-wrap'>\n            <div className='w-1/5 flex mb-4'>\n              <button className='w-90p border border-gray-750 rounded-lg flex justify-center'>\n                <div className='w-85p py-1'>\n                  <div className='flex'>\n                    <p\n                      style={{ fontFamily: 'airbnb-book' }}\n                      className='text-sm'>\n                      {selectedCountry.full}\n                    </p>\n                  </div>\n                  <div className='flex'>\n                    <p\n                      style={{ fontFamily: 'airbnb-book' }}\n                      className='text-sm text-gray-650'>\n                      {selectedCountry.abbreviation}{' '}\n                      {selectedCountry.abbreviation === null ? null : '-'}{' '}\n                      {selectedCountry.symbol}\n                    </p>\n                  </div>\n                </div>\n              </button>\n            </div>\n            {languages.map((language) => {\n              return (\n                <div className='w-1/5 flex mb-4'>\n                  <button className='w-90p hover:bg-gray-250  rounded-lg flex justify-center'>\n                    <div className='w-85p py-1'>\n                      <div className='flex'>\n                        <p\n                          style={{ fontFamily: 'airbnb-book' }}\n                          className='text-sm'>\n                          {language.name}\n                        </p>\n                      </div>\n                      <div className='flex'>\n                        <p\n                          style={{ fontFamily: 'airbnb-book' }}\n                          className='text-sm text-gray-650'>\n                          {language.country}\n                        </p>\n                      </div>\n                    </div>\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACHA;AAEA;AAAA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AA1HA;AAgIA;AACA;AAFA;AA/HA;AAAA;AAAA;AACA;AAmIA;AACA;AAAA;AAGA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAesourceRoot":""}