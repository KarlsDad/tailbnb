{"version":3,"file":"static/webpack/static/development/pages/experiences.js.6aaa13b5180383e476d9.hot-update.js","sources":["webpack:///./src/components/containers/Hosts.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\n\n// Components\nimport { HostCard } from '../presentational/HostCard';\n\nconst experiencedata = gql`\n  query {\n    experiences {\n      id\n      title\n      location\n      country\n      img\n      imglow\n    }\n  }\n`;\n\ninterface Experience {\n  id: string;\n  title: string;\n  location: string;\n  country: string;\n  img: string;\n  imglow: string;\n}\n\ninterface ExperienceData {\n  experiences: Experience[];\n}\n\nexport const Hosts: () => string | JSX.Element = () => {\n  const { loading, error, data } = useQuery<ExperienceData>(experiencedata, {\n    pollInterval: 9000\n  });\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return (\n    <>\n      {loading ? (\n        <div className='flex justify-center items-center w-full py-20'>\n          <PulseLoader size={10} color={'#008489'} />\n        </div>\n      ) : (\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {data &&\n            data.experiences.map(({ id, title, location, country, img }) => {\n              return (\n                <div className='md:w-1/4 sm:w-1/3 w-1/2 pb-5'>\n                  <HostCard\n                    key={id}\n                    title={title}\n                    img={img}\n                    location={location}\n                    country={country}\n                  />\n                </div>\n              );\n            })}\n        </div>\n      )}\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AA0BA;AAAA;AAEA;AADA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAKA;;;;A","sourceRoot":""}