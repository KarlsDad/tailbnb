{"version":3,"file":"static/webpack/static/development/pages/index.js.1db144cc190e8805deca.hot-update.js","sources":["webpack:///./src/components/containers/Adventures.tsx","webpack:///./src/components/containers/Explore.tsx","webpack:///./src/components/containers/Featured.tsx","webpack:///./src/components/containers/Popular.tsx","webpack:///./src/components/containers/Stay.tsx","webpack:///./src/components/functions/ExploreCard.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Component\nimport { AdventureCard } from '../functions/AdventureCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n    }\n  }\n`;\n\ninterface Adventure {\n  id: string;\n  title: string;\n  period: number;\n  cost: number;\n  country: string;\n  img: string;\n}\n\ninterface AdventureData {\n  adventures: Adventure[];\n}\n\nexport const Adventures: any = () => {\n  const { loading, error, data } = useQuery<AdventureData>(GET_ADVENTURES);\n  const [card, setCard] = useState<number>(0);\n\n  const renderContent = (data: AdventureData, number: number) => {\n    var content: any[] = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/4 xl:w-1/4 pb-5'>\n          <AdventureCard\n            key={i}\n            id={data?.adventures[i].id}\n            img={data?.adventures[i].img}\n            country={data?.adventures[i].country}\n            title={data?.adventures[i].title}\n            cost={data?.adventures[i].cost}\n            period={data?.adventures[i].period}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section\n        title='Introducing Airbnb Adventures'\n        phrase='Multi-day trips led by local expertsâ€”activities, meals, and stays\n        included'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                <Media\n                  queries={{\n                    small: '(min-width: 0px) and (max-width: 640px)'\n                  }}>\n                  {(matches) =>\n                    matches.small\n                      ? (setCard(1), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n\n                <Media\n                  queries={{\n                    large: '(min-width: 641px) and (max-width: 767px)'\n                  }}>\n                  {(matches) =>\n                    matches.large && data.adventures\n                      ? (setCard(4), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    xl: '(min-width: 768px) and (max-width: 1023px)'\n                  }}>\n                  {(matches) =>\n                    matches.xl && data.adventures\n                      ? (setCard(4), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    twoxl: '(min-width: 1024px)'\n                  }}>\n                  {(matches) =>\n                    matches.twoxl\n                      ? (setCard(4), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n              </>\n            )\n          )}\n        </div>\n\n        <ShowAll title='Show all adventures' />\n      </Section>\n    </>\n  );\n};\n","import * as React from 'react';\n\n// Components\nimport { ExploreCard } from '../functions/ExploreCard';\n\n// Wrapper\nimport { SectionOverflow } from '../wrapper/SectionOverflow';\n\n// Images\n// High Resolution\nconst explore1 = require('../../../public/img/high/explore1.jpg');\nconst explore2 = require('../../../public/img/high/explore2.jpg');\nconst explore3 = require('../../../public/img/high/explore3.jpg');\n\ninterface Explore {\n  img: string;\n  title: string;\n}\n\nconst explores: Explore[] = [\n  {\n    img: explore1,\n    title: 'Stay'\n  },\n  {\n    img: explore2,\n    title: 'Experience'\n  },\n  {\n    img: explore3,\n    title: 'Adventure'\n  }\n];\n\nexport const Explore: React.FC<{}> = () => {\n  return (\n    <SectionOverflow title='Explore Airbnb'>\n      <div className='overflow-y-hidden'>\n        <div className='w-full h-full overflow-y-hidden'>\n          <div className='h-full scroller'>\n            <div className='scrollable sm:inset-x-0 flex items-center justify-start py-2 rounded-xl w-80 md:w-full'>\n              {explores.map(({ img, title }, index) => {\n                return (\n                  <div className='w-32 mr-4 sm:w-1/3 cursor-pointer'>\n                    <ExploreCard key={index} img={img} title={title} />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </SectionOverflow>\n  );\n};\n","import React, { useState } from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader';\n\n// Components\nimport { FeaturedCard } from '../functions/FeaturedCard';\n\n// Wrapper\nimport { SectionOverflow } from '../wrapper/SectionOverflow';\n\n// Images\n// High Resolution\nconst featured1 = require('../../../public/img/high/featured1.jpg');\nconst featured2 = require('../../../public/img/high/featured2.jpg');\nconst featured3 = require('../../../public/img/high/featured3.jpg');\n\ninterface Featured {\n  img: string;\n  verified: number;\n  description: string;\n}\n\nexport const Featured: React.FC<{}> = () => {\n  const [loading, setLoading] = useState(true);\n\n  function sleep(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  const setSleep = async (seconds: number) => {\n    await sleep(seconds);\n    setLoading(false);\n  };\n\n  const featureds = [\n    {\n      img: featured1,\n      verified: 940,\n      description:\n        'Find beachside bungalows, mid-century modern cottages, and more verified placed to stay in the City of Angels'\n    },\n    {\n      img: featured2,\n      verified: 300,\n      description:\n        'Discover Victorian flats, SoMa lofts, and more verified places stay in a city where invention meets counterculture.'\n    },\n    {\n      img: featured3,\n      verified: 290,\n      description:\n        'Take in soaring views and Edwardian details from Toronto places to stay verified for quality and design'\n    }\n  ];\n\n  setSleep(3000);\n\n  return (\n    <>\n      <SectionOverflow\n        title='Featured Airbnb Plus destinations'\n        phrase='Browse beautiful places to stay with all the comforts of home, plus more'>\n        {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          <div className='overflow-y-hidden'>\n            <div className='w-full h-full overflow-y-hidden'>\n              <div className='h-full scroller'>\n                <div className='scrollable sm:inset-x-0 flex items-start justify-start py-2 rounded-xl w-featured md:w-full'>\n                  {featureds.map(({ img, verified, description }, index) => {\n                    return (\n                      <div className='w-80 lg:w-1/3 pb-5 mr-2'>\n                        <FeaturedCard\n                          key={index}\n                          img={img}\n                          verified={verified}\n                          description={description}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </SectionOverflow>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader';\n\n// Components\nimport { Location } from '../functions/Location';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\ninterface Location {\n  location: string;\n  price: number;\n}\n\nexport const Popular: React.FC<{}> = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n\n  function sleep(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  const setSleep = async (seconds: number) => {\n    await sleep(seconds);\n    setLoading(false);\n  };\n\n  const locations: Location[] = [\n    { location: 'San Francisco', price: 216 },\n    {\n      location: 'Los Angeles',\n      price: 213\n    },\n    {\n      location: 'New York',\n      price: 159\n    },\n    {\n      location: 'Seattle',\n      price: 134\n    },\n    {\n      location: 'Denver',\n      price: 128\n    },\n    {\n      location: 'Washington DC',\n      price: 166\n    },\n    {\n      location: 'Phoenix',\n      price: 232\n    },\n    {\n      location: 'Austin',\n      price: 242\n    },\n    { location: 'Houston', price: 351 },\n    {\n      location: 'New Orleans',\n      price: 210\n    }\n  ];\n\n  setSleep(5000);\n\n  return (\n    <>\n      <Section title='Popular destinations in the United States'>\n        {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          <div className='flex flex-wrap items-center justify-start w-full'>\n            {locations.map(({ location, price }, index) => {\n              return (\n                <div className='text-gray-750 sm:w-1/2 lg:w-1/4 xl:w-1/5'>\n                  <Location key={index} location={location} price={price} />\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </Section>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Component\nimport { StayCard } from '../functions/StayCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_STAYS = gql`\n  query {\n    stays {\n      id\n      host_is_superhost\n      country\n      name\n      price\n      reviews_per_month\n      picture_url\n    }\n  }\n`;\n\ninterface StayData {\n  stays: Stay[];\n}\n\ninterface Stay {\n  id: string;\n  host_is_superhost: string;\n  country: string;\n  name: string;\n  price: number;\n  reviews_per_month: number;\n  picture_url: string;\n}\n\nexport const Stay: any = () => {\n  const { loading, error, data } = useQuery<StayData>(GET_STAYS);\n  const [card, setCard] = useState<number>(0);\n\n  const renderContent = (data: StayData, number: number) => {\n    var content: any[] = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 md:w-1/3 lg:w-1/4 pb-5'>\n          <StayCard\n            key={i}\n            id={data?.stays[i].id}\n            host_is_superhost={data?.stays[i].host_is_superhost}\n            country={data?.stays[i].country}\n            name={data?.stays[i].name}\n            price={data?.stays[i].price}\n            reviews_per_month={data?.stays[i].reviews_per_month}\n            picture_url={data?.stays[i].picture_url}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section title='Places to stay around the world'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                <Media\n                  queries={{ xs: '(min-width: 0px) and (max-width: 739px)' }}>\n                  {(matches) =>\n                    matches.xs ? (setCard(1), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    small: '(min-width: 740px) and (max-width: 987px)'\n                  }}>\n                  {(matches) =>\n                    matches.small\n                      ? (setCard(1), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    large: '(min-width: 988px) and (max-width: 1299px)'\n                  }}>\n                  {(matches) =>\n                    matches.large\n                      ? (setCard(8), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    xl: '(min-width: 1300px) and (max-width: 1529px)'\n                  }}>\n                  {(matches) =>\n                    matches.xl ? (setCard(8), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  queries={{\n                    twoxl: '(min-width: 1530px)'\n                  }}>\n                  {(matches) =>\n                    matches.twoxl\n                      ? (setCard(8), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n              </>\n            )\n          )}\n        </div>\n\n        <ShowAll title='Show(2000+)' />\n      </Section>\n    </>\n  );\n};\n","import * as React from 'react';\nimport Link from 'next/link';\n\ninterface Prop {\n  img: string;\n  title: string;\n}\n\nexport const ExploreCard: React.FC<Prop> = ({ img, title }) => {\n  return (\n    <div className='w-30/31'>\n      <Link href={`/${title.toLowerCase()}/index.tsx`}>\n        <div className='h-full w-32 sm:w-full flex flex-wrap items-center justify-start shadow-md rounded-xl bg-white'>\n          <img\n            src={img}\n            className='h-24 w-full md:h-full xl:h-20 rounded-b-none xl:h-full xl:w-32 rounded-lg xl:rounded-xl xl:rounded-r-none'\n          />\n          <p className='text-sm py-3 xl:py-0 pl-4 sm:pl-4 text-gray-750 font-semibold'>\n            {title}\n          </p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n"],"mappings":"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","sourceRoot":""}