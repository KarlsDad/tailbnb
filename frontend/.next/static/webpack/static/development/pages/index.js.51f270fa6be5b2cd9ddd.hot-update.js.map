{"version":3,"file":"static/webpack/static/development/pages/index.js.51f270fa6be5b2cd9ddd.hot-update.js","sources":["webpack:///./src/components/containers/Adventures.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\nimport Media from 'react-media';\n\n// Component\nimport AdventureCard from '../presentational/AdventureCard';\nimport ShowAll from '../ShowAll';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n      imglow\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_ADVENTURES);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [card, setCard] = useState(4);\n\n  const info = {\n    query: 'adventure',\n    count: 4,\n    orientation: 'portrait',\n    client_id: 'RchVxgkvTlsApnvD7fdLAxFzqAa0yi6OPLS3pTWs3W4'\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    axios\n      .get(\n        `https://api.unsplash.com/photos/random?h=140&query=${info.query}&count=${info.count}&orientation=${info.orientation}&client_id=${info.client_id}`\n      )\n      .then((data) => {\n        setPhotos({ imgs: data.data });\n      });\n    setIsLoading(false);\n  };\n\n  const renderContent = (data, number) => {\n    var content = [];\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-full sm:w-1/4 md:w-1/3 lg:w-1/5 xl:w-1/6 pb-5'>\n          <AdventureCard\n            key={data[i].id}\n            id={data[i].id}\n            img={data[i].img}\n            imglow={data[i].imglow}\n            country={data[i].country}\n            title={data[i].title}\n            cost={data[i].cost}\n            period={data[i].period}\n          />\n        </div>\n      );\n    }\n    console.log(content.length);\n    return content;\n  };\n\n  if (loading) {\n    return (\n      <div className='flex justify-center items-center w-full py-20'>\n        <PulseLoader size={10} color={'#008489'} />\n      </div>\n    );\n  }\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className='flex items-start justify-start flex-wrap w-full'>\n        {data ? (\n          <>\n            <Media queries={{ small: '(max-width: 747px)' }}>\n              {(matches) =>\n                matches.small\n                  ? (setCard(4), renderContent(data.adventures, card))\n                  : null\n              }\n            </Media>\n            <Media\n              queries={{\n                medium: '(min-width: 748px) and (max-width: 987px)'\n              }}>\n              {(matches) =>\n                matches.medium ? renderContent(data.adventures, 3) : null\n              }\n            </Media>\n            <Media\n              queries={{\n                large: '(min-width: 988px) and (max-width: 1299px)'\n              }}>\n              {(matches) =>\n                matches.large ? renderContent(data.adventures, 4) : null\n              }\n            </Media>\n            <Media\n              queries={{\n                xl: '(min-width: 1300px) and (max-width: 1529px)'\n              }}>\n              {(matches) =>\n                matches.xl ? renderContent(data.adventures, 5) : null\n              }\n            </Media>\n            <Media\n              queries={{\n                xl: '(min-width: 1530px)'\n              }}>\n              {(matches) =>\n                matches.xl ? renderContent(data.adventures, 6) : null\n              }\n            </Media>\n          </>\n        ) : null}\n\n        {/* {data.adventures.map(({ id, country, title, cost, period }, index) => {\n          return (\n           \n              {photos.imgs ? (\n                <AdventureCard\n                  key={id}\n                  id={id}\n                  img={photos.imgs[index].urls.full}\n                  imglow={photos.imgs[index].urls.thumb}\n                  country={country}\n                  title={title}\n                  cost={cost}\n                  period={period}\n                />\n              ) : null}\n            </div>\n          );\n        })} */}\n      </div>\n\n      <ShowAll title='Show all adventures' />\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;AAAA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAQA;AACA;AADA;AADA;AASA;AACA;AADA;AADA;AASA;AACA;AADA;AADA;AASA;AACA;AADA;AADA;AA+BA;AAAA;AAGA;;;;A","sourceRoot":""}