{"version":3,"file":"static/webpack/static/development/pages/experience.js.1db144cc190e8805deca.hot-update.js","sources":["webpack:///./src/components/containers/Experiences.tsx","webpack:///./src/components/containers/Hosts.tsx"],"sourcesContent":["import * as React from 'react';\n\n// Components\nimport { ExperienceCard } from '../functions/ExperienceCard';\n\n// Wrapper\nimport { ExploreSectionOverflow } from '../wrapper/ExploreSectionOverflow';\n\n// Images\n// High Resolution\nconst featured1 = require('../../../public/img/high/featured1.jpg');\nconst featured2 = require('../../../public/img/high/featured2.jpg');\nconst featured3 = require('../../../public/img/high/featured3.jpg');\n\ninterface Feature {\n  id?: string;\n  img: string;\n  experiences: number;\n  type: string;\n  description: string;\n}\n\nconst featureds: Feature[] = [\n  {\n    img: featured1,\n    experiences: 940,\n    type: 'Cooking',\n    description: 'Make and eat meals with locals who treact you like family'\n  },\n  {\n    img: featured2,\n    experiences: 940,\n    type: 'Cooking',\n    description: 'Make and eat meals with locals who treact you like family'\n  },\n  {\n    img: featured3,\n    experiences: 940,\n    type: 'Cooking',\n    description: 'Make and eat meals with locals who treact you like family'\n  }\n];\n\nexport const Experiences: React.FC<{}> = () => {\n  return (\n    <>\n      <ExploreSectionOverflow>\n        <div className='overflow-y-hidden'>\n          <div className='w-full h-full overflow-y-hidden'>\n            <div className='h-full scroller'>\n              <div className='scrollable sm:inset-x-0 flex items-start justify-startpy-2 w-featured md:w-full'>\n                {featureds.map(\n                  ({ img, experiences, type, description }, index) => {\n                    return (\n                      <div className='w-80 lg:w-1/3 pb-5 mr-2'>\n                        <ExperienceCard\n                          key={index}\n                          id={index.toString()}\n                          img={img}\n                          experiences={experiences}\n                          type={type}\n                          description={description}\n                        />\n                      </div>\n                    );\n                  }\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </ExploreSectionOverflow>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\n\n// Components\nimport { HostCard } from '../functions/HostCard';\n\n// Wrapper\nimport { ExploreSection } from '../wrapper/ExploreSection';\n\nconst experiencedata = gql`\n  query {\n    experiences {\n      id\n      title\n      location\n      country\n      img\n    }\n  }\n`;\n\ninterface Experience {\n  id: string;\n  title: string;\n  location: string;\n  country: string;\n  img: string;\n  imglow: string;\n}\n\ninterface ExperienceData {\n  experiences: Experience[];\n}\n\nexport const Hosts: any = () => {\n  const { loading, error, data } = useQuery<ExperienceData>(experiencedata);\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <ExploreSection title='Meet hosts around the world'>\n        {loading ? (\n          <div className='flex justify-center items-center w-full py-20'>\n            <PulseLoader size={10} color={'#008489'} />\n          </div>\n        ) : (\n          <div className='flex items-start justify-start flex-wrap w-full'>\n            {data &&\n              data.experiences.map(({ id, title, location, country, img }) => {\n                return (\n                  <div className='md:w-1/4 sm:w-1/3 w-1/2 pb-5'>\n                    <HostCard\n                      key={id}\n                      title={title}\n                      img={img}\n                      location={location}\n                      country={country}\n                    />\n                  </div>\n                );\n              })}\n          </div>\n        )}\n      </ExploreSection>\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AASA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAyBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAMA;;;;A","sourceRoot":""}