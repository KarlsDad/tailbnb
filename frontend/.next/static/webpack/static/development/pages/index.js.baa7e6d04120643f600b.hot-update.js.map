{"version":3,"file":"static/webpack/static/development/pages/index.js.baa7e6d04120643f600b.hot-update.js","sources":["webpack:///./src/components/modals/CalendarModal.jsx"],"sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  getStartingDay,\n  getEndingDay,\n  getDaysInMonth,\n  generateUnexistingDays,\n  generateUnavailableDays,\n  getEndingDate\n} from '../../util/CalendarModalFunctions';\n\nconst month = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nconst days = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday'\n];\n\nexport const CalendarModal = () => {\n  // Info\n  const today = new Date();\n  const currentDate = today.getDate();\n  const currentMonth = today.getMonth();\n  const currentYear = today.getFullYear();\n\n  // Display\n  const [displayedDate, setDisplayedDate] = useState(currentDate);\n  const [displayedMonth, setDisplayedMonth] = useState(currentMonth);\n  const [displayedYear, setDisplayedYear] = useState(currentYear);\n\n  // Selected\n  const [selectedDate, setSelectedDate] = useState(0);\n\n  useEffect(() => {\n    if (displayedMonth !== currentMonth) {\n      setDisplayedDate(null);\n    } else {\n      setDisplayedDate(currentDate);\n    }\n    console.log('selected', selectedDate);\n  }, [displayedMonth]);\n\n  const generateAvailableDays = (today, lastday) => {\n    console.log('inside', selectedDate);\n    var result = [];\n    for (var i = today; i <= lastday; i++) {\n      result.push(\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            setSelectedDate(i);\n          }}\n          className='flex justify-center'>\n          <div className='text-white py-1'>\n            <p className='text-gray-900'>{i}</p>\n          </div>\n        </button>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div\n      style={{ top: 55 }}\n      className='absolute z-50 bg-white w-76 p-6 shadow-xl'>\n      <div className='flex items-center justify-between'>\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            if (displayedMonth === 0) {\n              setDisplayedMonth(11);\n              setDisplayedYear(displayedYear - 1);\n            } else {\n              setDisplayedMonth(displayedMonth - 1);\n            }\n          }}\n          className='py-2 px-3'>\n          <div className='w-3 h-3'>\n            <svg\n              style={{ fill: '#484848' }}\n              className='w-full h-full'\n              xmlns='http://www.w3.org/2000/svg'\n              viewBox='0 0 492 492'>\n              <g>\n                <g>\n                  <path\n                    d='M464.344,207.418l0.768,0.168H135.888l103.496-103.724c5.068-5.064,7.848-11.924,7.848-19.124\n\t\t\tc0-7.2-2.78-14.012-7.848-19.088L223.28,49.538c-5.064-5.064-11.812-7.864-19.008-7.864c-7.2,0-13.952,2.78-19.016,7.844\n\t\t\tL7.844,226.914C2.76,231.998-0.02,238.77,0,245.974c-0.02,7.244,2.76,14.02,7.844,19.096l177.412,177.412\n\t\t\tc5.064,5.06,11.812,7.844,19.016,7.844c7.196,0,13.944-2.788,19.008-7.844l16.104-16.112c5.068-5.056,7.848-11.808,7.848-19.008\n\t\t\tc0-7.196-2.78-13.592-7.848-18.652L134.72,284.406h329.992c14.828,0,27.288-12.78,27.288-27.6v-22.788\n\t\t\tC492,219.198,479.172,207.418,464.344,207.418z'\n                  />\n                </g>\n              </g>\n            </svg>\n          </div>\n        </button>\n        <div className='px-4 flex justify-center'>\n          <div>\n            <h3\n              style={{ fontFamily: 'airbnb-bold' }}\n              className='text-gray-750 text-lg'>\n              {month[displayedMonth]} {displayedYear}\n            </h3>\n          </div>\n        </div>\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            if (displayedMonth === 11) {\n              setDisplayedMonth(0);\n              setDisplayedYear(displayedYear + 1);\n            } else {\n              setDisplayedMonth(displayedMonth + 1);\n            }\n          }}\n          className='py-2 px-3'>\n          <div className='h-3 w-3'>\n            <svg\n              style={{ fill: '#484848' }}\n              className='w-full h-full'\n              xmlns='http://www.w3.org/2000/svg'\n              viewBox='0 0 492.004 492.004'>\n              <g>\n                <g>\n                  <path\n                    d='M484.14,226.886L306.46,49.202c-5.072-5.072-11.832-7.856-19.04-7.856c-7.216,0-13.972,2.788-19.044,7.856l-16.132,16.136\n\t\t\tc-5.068,5.064-7.86,11.828-7.86,19.04c0,7.208,2.792,14.2,7.86,19.264L355.9,207.526H26.58C11.732,207.526,0,219.15,0,234.002\n\t\t\tv22.812c0,14.852,11.732,27.648,26.58,27.648h330.496L252.248,388.926c-5.068,5.072-7.86,11.652-7.86,18.864\n\t\t\tc0,7.204,2.792,13.88,7.86,18.948l16.132,16.084c5.072,5.072,11.828,7.836,19.044,7.836c7.208,0,13.968-2.8,19.04-7.872\n\t\t\tl177.68-177.68c5.084-5.088,7.88-11.88,7.86-19.1C492.02,238.762,489.228,231.966,484.14,226.886z'\n                  />\n                </g>\n              </g>\n            </svg>\n          </div>\n        </button>\n      </div>\n      <div className='mt-4'>\n        <div\n          style={{ fontFamily: 'airbnb-book' }}\n          className='grid grid-cols-7 text-gray-650 text-sm'>\n          {days.map((day) => {\n            return (\n              <div className='flex justify-center'>\n                <div>\n                  <p>{day.slice(0, 2)}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className='mt-4'>\n        <div\n          style={{ fontFamily: 'airbnb-book' }}\n          className='grid grid-cols-7 text-gray-650 text-sm'>\n          {generateUnexistingDays(\n            getStartingDay(displayedMonth, displayedYear)\n          )}\n\n          {generateUnavailableDays(1, displayedDate)}\n\n          {generateAvailableDays(\n            displayedDate,\n            getEndingDate(displayedMonth, displayedYear).getDate()\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AASA;AAeA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAcaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;A","sourceRoot":""}