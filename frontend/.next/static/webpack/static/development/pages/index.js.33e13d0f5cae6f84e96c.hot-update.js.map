{"version":3,"file":"static/webpack/static/development/pages/index.js.33e13d0f5cae6f84e96c.hot-update.js","sources":["webpack:///./src/components/containers/TopRated.jsx"],"sourcesContent":["import * as React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport withSizes from 'react-sizes';\n\n// Components\nimport { TopRatedCard } from '../functions/TopRatedCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_EXPERIENCES = gql`\n  query {\n    experiences {\n      id\n      title\n      cost\n      ratings\n      reviews\n      location\n      img\n    }\n  }\n`;\n\nconst mapSizesToProps = ({ width }) => ({\n  isMobile: width < 767,\n  isTablet: width > 767 && width < 1023,\n  isLaptop: width > 1023 && width < 1279,\n  isDesktop: width > 1279 && width < 1529,\n  isLargeDesktop: width > 1529\n});\n\nconst renderContent = (data, number) => {\n  var content = [];\n\n  for (let i = 0; i < number; i++) {\n    content.push(\n      <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 2xl:w-1/6 pb-5'>\n        <TopRatedCard\n          key={i}\n          id={data?.experiences[i].id}\n          img={data?.experiences[i].img}\n          title={data?.experiences[i].title}\n          cost={data?.experiences[i].cost}\n          ratings={data?.experiences[i].ratings}\n          reviews={data?.experiences[i].reviews}\n          location={data?.experiences[i].location}\n        />\n      </div>\n    );\n  }\n  return content;\n};\n\n// interface Experience {\n//   id: string;\n//   title: string;\n//   cost: number;\n//   ratings: number;\n//   reviews: number;\n//   location: string;\n//   img: string;\n// }\n\n// interface ExperienceData {\n//   experiences: Experience[];\n// }\n\nexport const TopRated = ({\n  isMobile,\n  isTablet,\n  isLaptop,\n  isDesktop,\n  isLargeDesktop\n}) => {\n  const { loading, error, data } = useQuery(GET_EXPERIENCES);\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section\n        title='Top-rated experiences'\n        phrase='Book activities led by local hosts on your next trip.'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                {isMobile ? renderContent(data, 4) : null}\n                {isTablet ? renderContent(data, 3) : null}\n                {isLaptop ? renderContent(data, 4) : null}\n                {isDesktop ? renderContent(data, 5) : null}\n                {isLargeDesktop ? renderContent(data, 6) : null}\n              </>\n            )\n          )}\n        </div>\n        <ShowAll title='Show all experiences' />\n      </Section>\n    </>\n  );\n};\n\nexport default withSizes(mapSizesToProps)(TopRated);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;A","sourceRoot":""}