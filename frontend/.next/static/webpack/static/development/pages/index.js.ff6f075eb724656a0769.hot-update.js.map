{"version":3,"file":"static/webpack/static/development/pages/index.js.ff6f075eb724656a0769.hot-update.js","sources":["webpack:///./src/components/containers/Adventures.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Media from 'react-media';\n\n// Component\nimport { AdventureCard } from '../functions/AdventureCard';\nimport { ShowAll } from '../ShowAll';\n\n// Wrapper\nimport { Section } from '../wrapper/Section';\n\nconst GET_ADVENTURES = gql`\n  query {\n    adventures {\n      id\n      title\n      period\n      cost\n      country\n      img\n    }\n  }\n`;\n\ninterface Adventure {\n  id: string;\n  title: string;\n  period: number;\n  cost: number;\n  country: string;\n  img: string;\n}\n\ninterface AdventureData {\n  adventures: Adventure[];\n}\n\nexport const Adventures: any = () => {\n  const { loading, error, data } = useQuery<AdventureData>(GET_ADVENTURES);\n  const [card, setCard] = useState<number>(0);\n\n  const renderContent = (data: AdventureData, number: number) => {\n    var content: any[] = [];\n\n    for (let i = 0; i < number; i++) {\n      content.push(\n        <div className='w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 pb-5'>\n          <AdventureCard\n            key={i}\n            id={data?.adventures[i].id}\n            img={data?.adventures[i].img}\n            country={data?.adventures[i].country}\n            title={data?.adventures[i].title}\n            cost={data?.adventures[i].cost}\n            period={data?.adventures[i].period}\n          />\n        </div>\n      );\n    }\n    return content;\n  };\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Section\n        title='Introducing Airbnb Adventures'\n        phrase='Multi-day trips led by local expertsâ€”activities, meals, and stays\n        included'>\n        <div className='flex items-start justify-start flex-wrap w-full'>\n          {loading ? (\n            <div className='flex justify-center items-center w-full py-20'>\n              <PulseLoader size={10} color={'#008489'} />\n            </div>\n          ) : (\n            data && (\n              <>\n                <Media\n                  key={1}\n                  queries={{\n                    xs: '(min-width: 0px) and (max-width: 739px)'\n                  }}>\n                  {(matches) =>\n                    matches.xs ? (setCard(4), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  key={2}\n                  queries={{\n                    small: '(min-width: 740px) and (max-width: 987px)'\n                  }}>\n                  {(matches) =>\n                    matches.small\n                      ? (setCard(3), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n\n                <Media\n                  key={3}\n                  queries={{\n                    large: '(min-width: 988px) and (max-width: 1299px)'\n                  }}>\n                  {(matches) =>\n                    matches.large\n                      ? (setCard(3), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n\n                <Media\n                  key={4}\n                  queries={{\n                    xl: '(min-width: 1300px) and (max-width: 1529px)'\n                  }}>\n                  {(matches) =>\n                    matches.xl ? (setCard(4), renderContent(data, card)) : null\n                  }\n                </Media>\n                <Media\n                  key={5}\n                  queries={{\n                    twoxl: '(min-width: 1530px)'\n                  }}>\n                  {(matches) =>\n                    matches.twoxl\n                      ? (setCard(6), renderContent(data, card))\n                      : null\n                  }\n                </Media>\n              </>\n            )\n          )}\n        </div>\n\n        <ShowAll title='Show all adventures' />\n      </Section>\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AA0BA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAKA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAQA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAQA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAKA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}